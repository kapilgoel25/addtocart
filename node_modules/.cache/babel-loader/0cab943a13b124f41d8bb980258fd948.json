{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Jason Anderson @diurnalist\n*/\n\"use strict\";\n\nconst {\n  basename,\n  extname\n} = require(\"path\");\n\nconst util = require(\"util\");\n\nconst Chunk = require(\"./Chunk\");\n\nconst Module = require(\"./Module\");\n\nconst {\n  parseResource\n} = require(\"./util/identifier\");\n/** @typedef {import(\"./Compilation\").AssetInfo} AssetInfo */\n\n/** @typedef {import(\"./Compilation\").PathData} PathData */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n\nconst REGEXP = /\\[\\\\*([\\w:]+)\\\\*\\]/gi;\n\nconst prepareId = id => {\n  if (typeof id !== \"string\") return id;\n\n  if (/^\"\\s\\+*.*\\+\\s*\"$/.test(id)) {\n    const match = /^\"\\s\\+*\\s*(.*)\\s*\\+\\s*\"$/.exec(id);\n    return `\" + (${match[1]} + \"\").replace(/(^[.-]|[^a-zA-Z0-9_-])+/g, \"_\") + \"`;\n  }\n\n  return id.replace(/(^[.-]|[^a-zA-Z0-9_-])+/g, \"_\");\n};\n\nconst hashLength = (replacer, handler, assetInfo, hashName) => {\n  const fn = (match, arg, input) => {\n    let result;\n    const length = arg && parseInt(arg, 10);\n\n    if (length && handler) {\n      result = handler(length);\n    } else {\n      const hash = replacer(match, arg, input);\n      result = length ? hash.slice(0, length) : hash;\n    }\n\n    if (assetInfo) {\n      assetInfo.immutable = true;\n\n      if (Array.isArray(assetInfo[hashName])) {\n        assetInfo[hashName] = [...assetInfo[hashName], result];\n      } else if (assetInfo[hashName]) {\n        assetInfo[hashName] = [assetInfo[hashName], result];\n      } else {\n        assetInfo[hashName] = result;\n      }\n    }\n\n    return result;\n  };\n\n  return fn;\n};\n\nconst replacer = (value, allowEmpty) => {\n  const fn = (match, arg, input) => {\n    if (typeof value === \"function\") {\n      value = value();\n    }\n\n    if (value === null || value === undefined) {\n      if (!allowEmpty) {\n        throw new Error(`Path variable ${match} not implemented in this context: ${input}`);\n      }\n\n      return \"\";\n    } else {\n      return `${value}`;\n    }\n  };\n\n  return fn;\n};\n\nconst deprecationCache = new Map();\n\nconst deprecatedFunction = (() => () => {})();\n\nconst deprecated = (fn, message, code) => {\n  let d = deprecationCache.get(message);\n\n  if (d === undefined) {\n    d = util.deprecate(deprecatedFunction, message, code);\n    deprecationCache.set(message, d);\n  }\n\n  return function () {\n    d();\n    return fn(...arguments);\n  };\n};\n/**\n * @param {string | function(PathData, AssetInfo=): string} path the raw path\n * @param {PathData} data context data\n * @param {AssetInfo} assetInfo extra info about the asset (will be written to)\n * @returns {string} the interpolated path\n */\n\n\nconst replacePathVariables = (path, data, assetInfo) => {\n  const chunkGraph = data.chunkGraph;\n  /** @type {Map<string, Function>} */\n\n  const replacements = new Map(); // Filename context\n  //\n  // Placeholders\n  //\n  // for /some/path/file.js?query#fragment:\n  // [file] - /some/path/file.js\n  // [query] - ?query\n  // [fragment] - #fragment\n  // [base] - file.js\n  // [path] - /some/path/\n  // [name] - file\n  // [ext] - .js\n\n  if (typeof data.filename === \"string\") {\n    const {\n      path: file,\n      query,\n      fragment\n    } = parseResource(data.filename);\n    const ext = extname(file);\n    const base = basename(file);\n    const name = base.slice(0, base.length - ext.length);\n    const path = file.slice(0, file.length - base.length);\n    replacements.set(\"file\", replacer(file));\n    replacements.set(\"query\", replacer(query, true));\n    replacements.set(\"fragment\", replacer(fragment, true));\n    replacements.set(\"path\", replacer(path, true));\n    replacements.set(\"base\", replacer(base));\n    replacements.set(\"name\", replacer(name));\n    replacements.set(\"ext\", replacer(ext, true)); // Legacy\n\n    replacements.set(\"filebase\", deprecated(replacer(base), \"[filebase] is now [base]\", \"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_FILENAME\"));\n  } // Compilation context\n  //\n  // Placeholders\n  //\n  // [fullhash] - data.hash (3a4b5c6e7f)\n  //\n  // Legacy Placeholders\n  //\n  // [hash] - data.hash (3a4b5c6e7f)\n\n\n  if (data.hash) {\n    const hashReplacer = hashLength(replacer(data.hash), data.hashWithLength, assetInfo, \"fullhash\");\n    replacements.set(\"fullhash\", hashReplacer); // Legacy\n\n    replacements.set(\"hash\", deprecated(hashReplacer, \"[hash] is now [fullhash] (also consider using [chunkhash] or [contenthash], see documentation for details)\", \"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_HASH\"));\n  } // Chunk Context\n  //\n  // Placeholders\n  //\n  // [id] - chunk.id (0.js)\n  // [name] - chunk.name (app.js)\n  // [chunkhash] - chunk.hash (7823t4t4.js)\n  // [contenthash] - chunk.contentHash[type] (3256u3zg.js)\n\n\n  if (data.chunk) {\n    const chunk = data.chunk;\n    const contentHashType = data.contentHashType;\n    const idReplacer = replacer(chunk.id);\n    const nameReplacer = replacer(chunk.name || chunk.id);\n    const chunkhashReplacer = hashLength(replacer(chunk instanceof Chunk ? chunk.renderedHash : chunk.hash), \"hashWithLength\" in chunk ? chunk.hashWithLength : undefined, assetInfo, \"chunkhash\");\n    const contenthashReplacer = hashLength(replacer(data.contentHash || contentHashType && chunk.contentHash && chunk.contentHash[contentHashType]), data.contentHashWithLength || (\"contentHashWithLength\" in chunk && chunk.contentHashWithLength ? chunk.contentHashWithLength[contentHashType] : undefined), assetInfo, \"contenthash\");\n    replacements.set(\"id\", idReplacer);\n    replacements.set(\"name\", nameReplacer);\n    replacements.set(\"chunkhash\", chunkhashReplacer);\n    replacements.set(\"contenthash\", contenthashReplacer);\n  } // Module Context\n  //\n  // Placeholders\n  //\n  // [id] - module.id (2.png)\n  // [hash] - module.hash (6237543873.png)\n  //\n  // Legacy Placeholders\n  //\n  // [moduleid] - module.id (2.png)\n  // [modulehash] - module.hash (6237543873.png)\n\n\n  if (data.module) {\n    const module = data.module;\n    const idReplacer = replacer(() => prepareId(module instanceof Module ? chunkGraph.getModuleId(module) : module.id));\n    const moduleHashReplacer = hashLength(replacer(() => module instanceof Module ? chunkGraph.getRenderedModuleHash(module, data.runtime) : module.hash), \"hashWithLength\" in module ? module.hashWithLength : undefined, assetInfo, \"modulehash\");\n    const contentHashReplacer = hashLength(replacer(data.contentHash), undefined, assetInfo, \"contenthash\");\n    replacements.set(\"id\", idReplacer);\n    replacements.set(\"modulehash\", moduleHashReplacer);\n    replacements.set(\"contenthash\", contentHashReplacer);\n    replacements.set(\"hash\", data.contentHash ? contentHashReplacer : moduleHashReplacer); // Legacy\n\n    replacements.set(\"moduleid\", deprecated(idReplacer, \"[moduleid] is now [id]\", \"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_MODULE_ID\"));\n  } // Other things\n\n\n  if (data.url) {\n    replacements.set(\"url\", replacer(data.url));\n  }\n\n  if (typeof data.runtime === \"string\") {\n    replacements.set(\"runtime\", replacer(() => prepareId(data.runtime)));\n  } else {\n    replacements.set(\"runtime\", replacer(\"_\"));\n  }\n\n  if (typeof path === \"function\") {\n    path = path(data, assetInfo);\n  }\n\n  path = path.replace(REGEXP, (match, content) => {\n    if (content.length + 2 === match.length) {\n      const contentMatch = /^(\\w+)(?::(\\w+))?$/.exec(content);\n      if (!contentMatch) return match;\n      const [, kind, arg] = contentMatch;\n      const replacer = replacements.get(kind);\n\n      if (replacer !== undefined) {\n        return replacer(match, arg, path);\n      }\n    } else if (match.startsWith(\"[\\\\\") && match.endsWith(\"\\\\]\")) {\n      return `[${match.slice(2, -2)}]`;\n    }\n\n    return match;\n  });\n  return path;\n};\n\nconst plugin = \"TemplatedPathPlugin\";\n\nclass TemplatedPathPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(plugin, compilation => {\n      compilation.hooks.assetPath.tap(plugin, replacePathVariables);\n    });\n  }\n\n}\n\nmodule.exports = TemplatedPathPlugin;","map":{"version":3,"sources":["E:/Coding/fixl solution/work1/addtocart/node_modules/webpack/lib/TemplatedPathPlugin.js"],"names":["basename","extname","require","util","Chunk","Module","parseResource","REGEXP","prepareId","id","test","match","exec","replace","hashLength","replacer","handler","assetInfo","hashName","fn","arg","input","result","length","parseInt","hash","slice","immutable","Array","isArray","value","allowEmpty","undefined","Error","deprecationCache","Map","deprecatedFunction","deprecated","message","code","d","get","deprecate","set","replacePathVariables","path","data","chunkGraph","replacements","filename","file","query","fragment","ext","base","name","hashReplacer","hashWithLength","chunk","contentHashType","idReplacer","nameReplacer","chunkhashReplacer","renderedHash","contenthashReplacer","contentHash","contentHashWithLength","module","getModuleId","moduleHashReplacer","getRenderedModuleHash","runtime","contentHashReplacer","url","content","contentMatch","kind","startsWith","endsWith","plugin","TemplatedPathPlugin","apply","compiler","hooks","compilation","tap","assetPath","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Jason Anderson @diurnalist\n*/\n\n\"use strict\";\n\nconst { basename, extname } = require(\"path\");\nconst util = require(\"util\");\nconst Chunk = require(\"./Chunk\");\nconst Module = require(\"./Module\");\nconst { parseResource } = require(\"./util/identifier\");\n\n/** @typedef {import(\"./Compilation\").AssetInfo} AssetInfo */\n/** @typedef {import(\"./Compilation\").PathData} PathData */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nconst REGEXP = /\\[\\\\*([\\w:]+)\\\\*\\]/gi;\n\nconst prepareId = id => {\n\tif (typeof id !== \"string\") return id;\n\n\tif (/^\"\\s\\+*.*\\+\\s*\"$/.test(id)) {\n\t\tconst match = /^\"\\s\\+*\\s*(.*)\\s*\\+\\s*\"$/.exec(id);\n\n\t\treturn `\" + (${match[1]} + \"\").replace(/(^[.-]|[^a-zA-Z0-9_-])+/g, \"_\") + \"`;\n\t}\n\n\treturn id.replace(/(^[.-]|[^a-zA-Z0-9_-])+/g, \"_\");\n};\n\nconst hashLength = (replacer, handler, assetInfo, hashName) => {\n\tconst fn = (match, arg, input) => {\n\t\tlet result;\n\t\tconst length = arg && parseInt(arg, 10);\n\n\t\tif (length && handler) {\n\t\t\tresult = handler(length);\n\t\t} else {\n\t\t\tconst hash = replacer(match, arg, input);\n\n\t\t\tresult = length ? hash.slice(0, length) : hash;\n\t\t}\n\t\tif (assetInfo) {\n\t\t\tassetInfo.immutable = true;\n\t\t\tif (Array.isArray(assetInfo[hashName])) {\n\t\t\t\tassetInfo[hashName] = [...assetInfo[hashName], result];\n\t\t\t} else if (assetInfo[hashName]) {\n\t\t\t\tassetInfo[hashName] = [assetInfo[hashName], result];\n\t\t\t} else {\n\t\t\t\tassetInfo[hashName] = result;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\treturn fn;\n};\n\nconst replacer = (value, allowEmpty) => {\n\tconst fn = (match, arg, input) => {\n\t\tif (typeof value === \"function\") {\n\t\t\tvalue = value();\n\t\t}\n\t\tif (value === null || value === undefined) {\n\t\t\tif (!allowEmpty) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Path variable ${match} not implemented in this context: ${input}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn \"\";\n\t\t} else {\n\t\t\treturn `${value}`;\n\t\t}\n\t};\n\n\treturn fn;\n};\n\nconst deprecationCache = new Map();\nconst deprecatedFunction = (() => () => {})();\nconst deprecated = (fn, message, code) => {\n\tlet d = deprecationCache.get(message);\n\tif (d === undefined) {\n\t\td = util.deprecate(deprecatedFunction, message, code);\n\t\tdeprecationCache.set(message, d);\n\t}\n\treturn (...args) => {\n\t\td();\n\t\treturn fn(...args);\n\t};\n};\n\n/**\n * @param {string | function(PathData, AssetInfo=): string} path the raw path\n * @param {PathData} data context data\n * @param {AssetInfo} assetInfo extra info about the asset (will be written to)\n * @returns {string} the interpolated path\n */\nconst replacePathVariables = (path, data, assetInfo) => {\n\tconst chunkGraph = data.chunkGraph;\n\n\t/** @type {Map<string, Function>} */\n\tconst replacements = new Map();\n\n\t// Filename context\n\t//\n\t// Placeholders\n\t//\n\t// for /some/path/file.js?query#fragment:\n\t// [file] - /some/path/file.js\n\t// [query] - ?query\n\t// [fragment] - #fragment\n\t// [base] - file.js\n\t// [path] - /some/path/\n\t// [name] - file\n\t// [ext] - .js\n\tif (typeof data.filename === \"string\") {\n\t\tconst { path: file, query, fragment } = parseResource(data.filename);\n\n\t\tconst ext = extname(file);\n\t\tconst base = basename(file);\n\t\tconst name = base.slice(0, base.length - ext.length);\n\t\tconst path = file.slice(0, file.length - base.length);\n\n\t\treplacements.set(\"file\", replacer(file));\n\t\treplacements.set(\"query\", replacer(query, true));\n\t\treplacements.set(\"fragment\", replacer(fragment, true));\n\t\treplacements.set(\"path\", replacer(path, true));\n\t\treplacements.set(\"base\", replacer(base));\n\t\treplacements.set(\"name\", replacer(name));\n\t\treplacements.set(\"ext\", replacer(ext, true));\n\t\t// Legacy\n\t\treplacements.set(\n\t\t\t\"filebase\",\n\t\t\tdeprecated(\n\t\t\t\treplacer(base),\n\t\t\t\t\"[filebase] is now [base]\",\n\t\t\t\t\"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_FILENAME\"\n\t\t\t)\n\t\t);\n\t}\n\n\t// Compilation context\n\t//\n\t// Placeholders\n\t//\n\t// [fullhash] - data.hash (3a4b5c6e7f)\n\t//\n\t// Legacy Placeholders\n\t//\n\t// [hash] - data.hash (3a4b5c6e7f)\n\tif (data.hash) {\n\t\tconst hashReplacer = hashLength(\n\t\t\treplacer(data.hash),\n\t\t\tdata.hashWithLength,\n\t\t\tassetInfo,\n\t\t\t\"fullhash\"\n\t\t);\n\n\t\treplacements.set(\"fullhash\", hashReplacer);\n\n\t\t// Legacy\n\t\treplacements.set(\n\t\t\t\"hash\",\n\t\t\tdeprecated(\n\t\t\t\thashReplacer,\n\t\t\t\t\"[hash] is now [fullhash] (also consider using [chunkhash] or [contenthash], see documentation for details)\",\n\t\t\t\t\"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_HASH\"\n\t\t\t)\n\t\t);\n\t}\n\n\t// Chunk Context\n\t//\n\t// Placeholders\n\t//\n\t// [id] - chunk.id (0.js)\n\t// [name] - chunk.name (app.js)\n\t// [chunkhash] - chunk.hash (7823t4t4.js)\n\t// [contenthash] - chunk.contentHash[type] (3256u3zg.js)\n\tif (data.chunk) {\n\t\tconst chunk = data.chunk;\n\n\t\tconst contentHashType = data.contentHashType;\n\n\t\tconst idReplacer = replacer(chunk.id);\n\t\tconst nameReplacer = replacer(chunk.name || chunk.id);\n\t\tconst chunkhashReplacer = hashLength(\n\t\t\treplacer(chunk instanceof Chunk ? chunk.renderedHash : chunk.hash),\n\t\t\t\"hashWithLength\" in chunk ? chunk.hashWithLength : undefined,\n\t\t\tassetInfo,\n\t\t\t\"chunkhash\"\n\t\t);\n\t\tconst contenthashReplacer = hashLength(\n\t\t\treplacer(\n\t\t\t\tdata.contentHash ||\n\t\t\t\t\t(contentHashType &&\n\t\t\t\t\t\tchunk.contentHash &&\n\t\t\t\t\t\tchunk.contentHash[contentHashType])\n\t\t\t),\n\t\t\tdata.contentHashWithLength ||\n\t\t\t\t(\"contentHashWithLength\" in chunk && chunk.contentHashWithLength\n\t\t\t\t\t? chunk.contentHashWithLength[contentHashType]\n\t\t\t\t\t: undefined),\n\t\t\tassetInfo,\n\t\t\t\"contenthash\"\n\t\t);\n\n\t\treplacements.set(\"id\", idReplacer);\n\t\treplacements.set(\"name\", nameReplacer);\n\t\treplacements.set(\"chunkhash\", chunkhashReplacer);\n\t\treplacements.set(\"contenthash\", contenthashReplacer);\n\t}\n\n\t// Module Context\n\t//\n\t// Placeholders\n\t//\n\t// [id] - module.id (2.png)\n\t// [hash] - module.hash (6237543873.png)\n\t//\n\t// Legacy Placeholders\n\t//\n\t// [moduleid] - module.id (2.png)\n\t// [modulehash] - module.hash (6237543873.png)\n\tif (data.module) {\n\t\tconst module = data.module;\n\n\t\tconst idReplacer = replacer(() =>\n\t\t\tprepareId(\n\t\t\t\tmodule instanceof Module ? chunkGraph.getModuleId(module) : module.id\n\t\t\t)\n\t\t);\n\t\tconst moduleHashReplacer = hashLength(\n\t\t\treplacer(() =>\n\t\t\t\tmodule instanceof Module\n\t\t\t\t\t? chunkGraph.getRenderedModuleHash(module, data.runtime)\n\t\t\t\t\t: module.hash\n\t\t\t),\n\t\t\t\"hashWithLength\" in module ? module.hashWithLength : undefined,\n\t\t\tassetInfo,\n\t\t\t\"modulehash\"\n\t\t);\n\t\tconst contentHashReplacer = hashLength(\n\t\t\treplacer(data.contentHash),\n\t\t\tundefined,\n\t\t\tassetInfo,\n\t\t\t\"contenthash\"\n\t\t);\n\n\t\treplacements.set(\"id\", idReplacer);\n\t\treplacements.set(\"modulehash\", moduleHashReplacer);\n\t\treplacements.set(\"contenthash\", contentHashReplacer);\n\t\treplacements.set(\n\t\t\t\"hash\",\n\t\t\tdata.contentHash ? contentHashReplacer : moduleHashReplacer\n\t\t);\n\t\t// Legacy\n\t\treplacements.set(\n\t\t\t\"moduleid\",\n\t\t\tdeprecated(\n\t\t\t\tidReplacer,\n\t\t\t\t\"[moduleid] is now [id]\",\n\t\t\t\t\"DEP_WEBPACK_TEMPLATE_PATH_PLUGIN_REPLACE_PATH_VARIABLES_MODULE_ID\"\n\t\t\t)\n\t\t);\n\t}\n\n\t// Other things\n\tif (data.url) {\n\t\treplacements.set(\"url\", replacer(data.url));\n\t}\n\tif (typeof data.runtime === \"string\") {\n\t\treplacements.set(\n\t\t\t\"runtime\",\n\t\t\treplacer(() => prepareId(data.runtime))\n\t\t);\n\t} else {\n\t\treplacements.set(\"runtime\", replacer(\"_\"));\n\t}\n\n\tif (typeof path === \"function\") {\n\t\tpath = path(data, assetInfo);\n\t}\n\n\tpath = path.replace(REGEXP, (match, content) => {\n\t\tif (content.length + 2 === match.length) {\n\t\t\tconst contentMatch = /^(\\w+)(?::(\\w+))?$/.exec(content);\n\t\t\tif (!contentMatch) return match;\n\t\t\tconst [, kind, arg] = contentMatch;\n\t\t\tconst replacer = replacements.get(kind);\n\t\t\tif (replacer !== undefined) {\n\t\t\t\treturn replacer(match, arg, path);\n\t\t\t}\n\t\t} else if (match.startsWith(\"[\\\\\") && match.endsWith(\"\\\\]\")) {\n\t\t\treturn `[${match.slice(2, -2)}]`;\n\t\t}\n\t\treturn match;\n\t});\n\n\treturn path;\n};\n\nconst plugin = \"TemplatedPathPlugin\";\n\nclass TemplatedPathPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(plugin, compilation => {\n\t\t\tcompilation.hooks.assetPath.tap(plugin, replacePathVariables);\n\t\t});\n\t}\n}\n\nmodule.exports = TemplatedPathPlugin;\n"]},"metadata":{},"sourceType":"script"}