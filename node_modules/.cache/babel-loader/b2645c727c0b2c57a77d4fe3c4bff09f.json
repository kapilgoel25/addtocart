{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst RuntimeModule = require(\"../RuntimeModule\");\n\nconst Template = require(\"../Template\");\n\nconst {\n  chunkHasJs,\n  getChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\n\nconst {\n  getInitialChunkIds\n} = require(\"../javascript/StartupHelpers\");\n\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\n\nconst {\n  getUndoPath\n} = require(\"../util/identifier\");\n\nclass ReadFileChunkLoadingRuntimeModule extends RuntimeModule {\n  constructor(runtimeRequirements) {\n    super(\"readFile chunk loading\", RuntimeModule.STAGE_ATTACH);\n    this.runtimeRequirements = runtimeRequirements;\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  generate() {\n    const {\n      chunkGraph,\n      chunk\n    } = this;\n    const {\n      runtimeTemplate\n    } = this.compilation;\n    const fn = RuntimeGlobals.ensureChunkHandlers;\n    const withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n    const withExternalInstallChunk = this.runtimeRequirements.has(RuntimeGlobals.externalInstallChunk);\n    const withOnChunkLoad = this.runtimeRequirements.has(RuntimeGlobals.onChunksLoaded);\n    const withLoading = this.runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers);\n    const withHmr = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n    const withHmrManifest = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadManifest);\n    const conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n    const hasJsMatcher = compileBooleanMatcher(conditionMap);\n    const initialChunkIds = getInitialChunkIds(chunk, chunkGraph);\n    const outputName = this.compilation.getPath(getChunkFilenameTemplate(chunk, this.compilation.outputOptions), {\n      chunk,\n      contentHashType: \"javascript\"\n    });\n    const rootOutputDir = getUndoPath(outputName, this.compilation.outputOptions.path, false);\n    const stateExpression = withHmr ? `${RuntimeGlobals.hmrRuntimeStatePrefix}_readFileVm` : undefined;\n    return Template.asString([withBaseURI ? Template.asString([`${RuntimeGlobals.baseURI} = require(\"url\").pathToFileURL(${rootOutputDir ? `__dirname + ${JSON.stringify(\"/\" + rootOutputDir)}` : \"__filename\"});`]) : \"// no baseURI\", \"\", \"// object to store loaded chunks\", '// \"0\" means \"already loaded\", Promise means loading', `var installedChunks = ${stateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"}{`, Template.indent(Array.from(initialChunkIds, id => `${JSON.stringify(id)}: 0`).join(\",\\n\")), \"};\", \"\", withOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}.readFileVm = ${runtimeTemplate.returningFunction(\"installedChunks[chunkId] === 0\", \"chunkId\")};` : \"// no on chunks loaded\", \"\", withLoading || withExternalInstallChunk ? `var installChunk = ${runtimeTemplate.basicFunction(\"chunk\", [\"var moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\", \"for(var moduleId in moreModules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`, Template.indent([`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`]), \"}\"]), \"}\", `if(runtime) runtime(__webpack_require__);`, \"for(var i = 0; i < chunkIds.length; i++) {\", Template.indent([\"if(installedChunks[chunkIds[i]]) {\", Template.indent([\"installedChunks[chunkIds[i]][0]();\"]), \"}\", \"installedChunks[chunkIds[i]] = 0;\"]), \"}\", withOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}();` : \"\"])};` : \"// no chunk install function needed\", \"\", withLoading ? Template.asString([\"// ReadFile + VM.run chunk loading for javascript\", `${fn}.readFileVm = function(chunkId, promises) {`, hasJsMatcher !== false ? Template.indent([\"\", \"var installedChunkData = installedChunks[chunkId];\", 'if(installedChunkData !== 0) { // 0 means \"already installed\".', Template.indent(['// array of [resolve, reject, promise] means \"currently loading\"', \"if(installedChunkData) {\", Template.indent([\"promises.push(installedChunkData[2]);\"]), \"} else {\", Template.indent([hasJsMatcher === true ? \"if(true) { // all chunks have JS\" : `if(${hasJsMatcher(\"chunkId\")}) {`, Template.indent([\"// load the chunk and return promise to it\", \"var promise = new Promise(function(resolve, reject) {\", Template.indent([\"installedChunkData = installedChunks[chunkId] = [resolve, reject];\", `var filename = require('path').join(__dirname, ${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId));`, \"require('fs').readFile(filename, 'utf-8', function(err, content) {\", Template.indent([\"if(err) return reject(err);\", \"var chunk = {};\", \"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" + \"(chunk, require, require('path').dirname(filename), filename);\", \"installChunk(chunk);\"]), \"});\"]), \"});\", \"promises.push(installedChunkData[2] = promise);\"]), \"} else installedChunks[chunkId] = 0;\"]), \"}\"]), \"}\"]) : Template.indent([\"installedChunks[chunkId] = 0;\"]), \"};\"]) : \"// no chunk loading\", \"\", withExternalInstallChunk ? Template.asString([\"module.exports = __webpack_require__;\", `${RuntimeGlobals.externalInstallChunk} = installChunk;`]) : \"// no external install chunk\", \"\", withHmr ? Template.asString([\"function loadUpdateChunk(chunkId, updatedModulesList) {\", Template.indent([\"return new Promise(function(resolve, reject) {\", Template.indent([`var filename = require('path').join(__dirname, ${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId));`, \"require('fs').readFile(filename, 'utf-8', function(err, content) {\", Template.indent([\"if(err) return reject(err);\", \"var update = {};\", \"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" + \"(update, require, require('path').dirname(filename), filename);\", \"var updatedModules = update.modules;\", \"var runtime = update.runtime;\", \"for(var moduleId in updatedModules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(updatedModules, moduleId)) {`, Template.indent([`currentUpdate[moduleId] = updatedModules[moduleId];`, \"if(updatedModulesList) updatedModulesList.push(moduleId);\"]), \"}\"]), \"}\", \"if(runtime) currentUpdateRuntime.push(runtime);\", \"resolve();\"]), \"});\"]), \"});\"]), \"}\", \"\", Template.getFunctionContent(require(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")).replace(/\\$key\\$/g, \"readFileVm\").replace(/\\$installedChunks\\$/g, \"installedChunks\").replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\").replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache).replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories).replace(/\\$ensureChunkHandlers\\$/g, RuntimeGlobals.ensureChunkHandlers).replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty).replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData).replace(/\\$hmrDownloadUpdateHandlers\\$/g, RuntimeGlobals.hmrDownloadUpdateHandlers).replace(/\\$hmrInvalidateModuleHandlers\\$/g, RuntimeGlobals.hmrInvalidateModuleHandlers)]) : \"// no HMR\", \"\", withHmrManifest ? Template.asString([`${RuntimeGlobals.hmrDownloadManifest} = function() {`, Template.indent([\"return new Promise(function(resolve, reject) {\", Template.indent([`var filename = require('path').join(__dirname, ${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getUpdateManifestFilename}());`, \"require('fs').readFile(filename, 'utf-8', function(err, content) {\", Template.indent([\"if(err) {\", Template.indent(['if(err.code === \"ENOENT\") return resolve();', \"return reject(err);\"]), \"}\", \"try { resolve(JSON.parse(content)); }\", \"catch(e) { reject(e); }\"]), \"});\"]), \"});\"]), \"}\"]) : \"// no HMR manifest\"]);\n  }\n\n}\n\nmodule.exports = ReadFileChunkLoadingRuntimeModule;","map":{"version":3,"sources":["E:/Coding/fixl solution/work1/addtocart/node_modules/webpack/lib/node/ReadFileChunkLoadingRuntimeModule.js"],"names":["RuntimeGlobals","require","RuntimeModule","Template","chunkHasJs","getChunkFilenameTemplate","getInitialChunkIds","compileBooleanMatcher","getUndoPath","ReadFileChunkLoadingRuntimeModule","constructor","runtimeRequirements","STAGE_ATTACH","generate","chunkGraph","chunk","runtimeTemplate","compilation","fn","ensureChunkHandlers","withBaseURI","has","baseURI","withExternalInstallChunk","externalInstallChunk","withOnChunkLoad","onChunksLoaded","withLoading","withHmr","hmrDownloadUpdateHandlers","withHmrManifest","hmrDownloadManifest","conditionMap","getChunkConditionMap","hasJsMatcher","initialChunkIds","outputName","getPath","outputOptions","contentHashType","rootOutputDir","path","stateExpression","hmrRuntimeStatePrefix","undefined","asString","JSON","stringify","indent","Array","from","id","join","returningFunction","basicFunction","hasOwnProperty","moduleFactories","getChunkScriptFilename","getChunkUpdateScriptFilename","getFunctionContent","replace","moduleCache","hmrModuleData","hmrInvalidateModuleHandlers","getUpdateManifestFilename","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst {\n\tchunkHasJs,\n\tgetChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst { getInitialChunkIds } = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\nconst { getUndoPath } = require(\"../util/identifier\");\n\nclass ReadFileChunkLoadingRuntimeModule extends RuntimeModule {\n\tconstructor(runtimeRequirements) {\n\t\tsuper(\"readFile chunk loading\", RuntimeModule.STAGE_ATTACH);\n\t\tthis.runtimeRequirements = runtimeRequirements;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { chunkGraph, chunk } = this;\n\t\tconst { runtimeTemplate } = this.compilation;\n\t\tconst fn = RuntimeGlobals.ensureChunkHandlers;\n\t\tconst withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n\t\tconst withExternalInstallChunk = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.externalInstallChunk\n\t\t);\n\t\tconst withOnChunkLoad = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t);\n\t\tconst withLoading = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t);\n\t\tconst withHmr = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t);\n\t\tconst withHmrManifest = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t);\n\t\tconst conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n\t\tconst hasJsMatcher = compileBooleanMatcher(conditionMap);\n\t\tconst initialChunkIds = getInitialChunkIds(chunk, chunkGraph);\n\n\t\tconst outputName = this.compilation.getPath(\n\t\t\tgetChunkFilenameTemplate(chunk, this.compilation.outputOptions),\n\t\t\t{\n\t\t\t\tchunk,\n\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t}\n\t\t);\n\t\tconst rootOutputDir = getUndoPath(\n\t\t\toutputName,\n\t\t\tthis.compilation.outputOptions.path,\n\t\t\tfalse\n\t\t);\n\n\t\tconst stateExpression = withHmr\n\t\t\t? `${RuntimeGlobals.hmrRuntimeStatePrefix}_readFileVm`\n\t\t\t: undefined;\n\n\t\treturn Template.asString([\n\t\t\twithBaseURI\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${RuntimeGlobals.baseURI} = require(\"url\").pathToFileURL(${\n\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t? `__dirname + ${JSON.stringify(\"/\" + rootOutputDir)}`\n\t\t\t\t\t\t\t\t: \"__filename\"\n\t\t\t\t\t\t});`\n\t\t\t\t  ])\n\t\t\t\t: \"// no baseURI\",\n\t\t\t\"\",\n\t\t\t\"// object to store loaded chunks\",\n\t\t\t'// \"0\" means \"already loaded\", Promise means loading',\n\t\t\t`var installedChunks = ${\n\t\t\t\tstateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"\n\t\t\t}{`,\n\t\t\tTemplate.indent(\n\t\t\t\tArray.from(initialChunkIds, id => `${JSON.stringify(id)}: 0`).join(\n\t\t\t\t\t\",\\n\"\n\t\t\t\t)\n\t\t\t),\n\t\t\t\"};\",\n\t\t\t\"\",\n\t\t\twithOnChunkLoad\n\t\t\t\t? `${\n\t\t\t\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t\t\t  }.readFileVm = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\"installedChunks[chunkId] === 0\",\n\t\t\t\t\t\t\"chunkId\"\n\t\t\t\t  )};`\n\t\t\t\t: \"// no on chunks loaded\",\n\t\t\t\"\",\n\t\t\twithLoading || withExternalInstallChunk\n\t\t\t\t? `var installChunk = ${runtimeTemplate.basicFunction(\"chunk\", [\n\t\t\t\t\t\t\"var moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\",\n\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t`if(runtime) runtime(__webpack_require__);`,\n\t\t\t\t\t\t\"for(var i = 0; i < chunkIds.length; i++) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"if(installedChunks[chunkIds[i]]) {\",\n\t\t\t\t\t\t\tTemplate.indent([\"installedChunks[chunkIds[i]][0]();\"]),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"installedChunks[chunkIds[i]] = 0;\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\twithOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}();` : \"\"\n\t\t\t\t  ])};`\n\t\t\t\t: \"// no chunk install function needed\",\n\t\t\t\"\",\n\t\t\twithLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"// ReadFile + VM.run chunk loading for javascript\",\n\t\t\t\t\t\t`${fn}.readFileVm = function(chunkId, promises) {`,\n\t\t\t\t\t\thasJsMatcher !== false\n\t\t\t\t\t\t\t? Template.indent([\n\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\"var installedChunkData = installedChunks[chunkId];\",\n\t\t\t\t\t\t\t\t\t'if(installedChunkData !== 0) { // 0 means \"already installed\".',\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t'// array of [resolve, reject, promise] means \"currently loading\"',\n\t\t\t\t\t\t\t\t\t\t\"if(installedChunkData) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\"promises.push(installedChunkData[2]);\"]),\n\t\t\t\t\t\t\t\t\t\t\"} else {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\thasJsMatcher === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"if(true) { // all chunks have JS\"\n\t\t\t\t\t\t\t\t\t\t\t\t: `if(${hasJsMatcher(\"chunkId\")}) {`,\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\"// load the chunk and return promise to it\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"var promise = new Promise(function(resolve, reject) {\",\n\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"installedChunkData = installedChunks[chunkId] = [resolve, reject];\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t`var filename = require('path').join(__dirname, ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t\t\t\t\t\t)} + ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.getChunkScriptFilename\n\t\t\t\t\t\t\t\t\t\t\t\t\t}(chunkId));`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"require('fs').readFile(filename, 'utf-8', function(err, content) {\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"if(err) return reject(err);\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"var chunk = {};\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"(chunk, require, require('path').dirname(filename), filename);\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"installChunk(chunk);\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\"});\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"promises.push(installedChunkData[2] = promise);\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"} else installedChunks[chunkId] = 0;\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t: Template.indent([\"installedChunks[chunkId] = 0;\"]),\n\t\t\t\t\t\t\"};\"\n\t\t\t\t  ])\n\t\t\t\t: \"// no chunk loading\",\n\t\t\t\"\",\n\t\t\twithExternalInstallChunk\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"module.exports = __webpack_require__;\",\n\t\t\t\t\t\t`${RuntimeGlobals.externalInstallChunk} = installChunk;`\n\t\t\t\t  ])\n\t\t\t\t: \"// no external install chunk\",\n\t\t\t\"\",\n\t\t\twithHmr\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"function loadUpdateChunk(chunkId, updatedModulesList) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"return new Promise(function(resolve, reject) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`var filename = require('path').join(__dirname, ${JSON.stringify(\n\t\t\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t)} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId));`,\n\t\t\t\t\t\t\t\t\"require('fs').readFile(filename, 'utf-8', function(err, content) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"if(err) return reject(err);\",\n\t\t\t\t\t\t\t\t\t\"var update = {};\",\n\t\t\t\t\t\t\t\t\t\"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" +\n\t\t\t\t\t\t\t\t\t\t\"(update, require, require('path').dirname(filename), filename);\",\n\t\t\t\t\t\t\t\t\t\"var updatedModules = update.modules;\",\n\t\t\t\t\t\t\t\t\t\"var runtime = update.runtime;\",\n\t\t\t\t\t\t\t\t\t\"for(var moduleId in updatedModules) {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(updatedModules, moduleId)) {`,\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t`currentUpdate[moduleId] = updatedModules[moduleId];`,\n\t\t\t\t\t\t\t\t\t\t\t\"if(updatedModulesList) updatedModulesList.push(moduleId);\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\"if(runtime) currentUpdateRuntime.push(runtime);\",\n\t\t\t\t\t\t\t\t\t\"resolve();\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tTemplate.getFunctionContent(\n\t\t\t\t\t\t\trequire(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$key\\$/g, \"readFileVm\")\n\t\t\t\t\t\t\t.replace(/\\$installedChunks\\$/g, \"installedChunks\")\n\t\t\t\t\t\t\t.replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\")\n\t\t\t\t\t\t\t.replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache)\n\t\t\t\t\t\t\t.replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$ensureChunkHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty)\n\t\t\t\t\t\t\t.replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrDownloadUpdateHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrInvalidateModuleHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrInvalidateModuleHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR\",\n\t\t\t\"\",\n\t\t\twithHmrManifest\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${RuntimeGlobals.hmrDownloadManifest} = function() {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"return new Promise(function(resolve, reject) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`var filename = require('path').join(__dirname, ${JSON.stringify(\n\t\t\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t)} + ${RuntimeGlobals.getUpdateManifestFilename}());`,\n\t\t\t\t\t\t\t\t\"require('fs').readFile(filename, 'utf-8', function(err, content) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"if(err) {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t'if(err.code === \"ENOENT\") return resolve();',\n\t\t\t\t\t\t\t\t\t\t\"return reject(err);\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\"try { resolve(JSON.parse(content)); }\",\n\t\t\t\t\t\t\t\t\t\"catch(e) { reject(e); }\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR manifest\"\n\t\t]);\n\t}\n}\n\nmodule.exports = ReadFileChunkLoadingRuntimeModule;\n"]},"metadata":{},"sourceType":"script"}