{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst {\n  SyncWaterfallHook\n} = require(\"tapable\");\n\nconst Compilation = require(\"../Compilation\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst RuntimeModule = require(\"../RuntimeModule\");\n\nconst Template = require(\"../Template\");\n\nconst {\n  getChunkFilenameTemplate,\n  chunkHasJs\n} = require(\"../javascript/JavascriptModulesPlugin\");\n\nconst {\n  getInitialChunkIds\n} = require(\"../javascript/StartupHelpers\");\n\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\n\nconst {\n  getUndoPath\n} = require(\"../util/identifier\");\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/**\n * @typedef {Object} JsonpCompilationPluginHooks\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPreload\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPrefetch\n */\n\n/** @type {WeakMap<Compilation, JsonpCompilationPluginHooks>} */\n\n\nconst compilationHooksMap = new WeakMap();\n\nclass ModuleChunkLoadingRuntimeModule extends RuntimeModule {\n  /**\n   * @param {Compilation} compilation the compilation\n   * @returns {JsonpCompilationPluginHooks} hooks\n   */\n  static getCompilationHooks(compilation) {\n    if (!(compilation instanceof Compilation)) {\n      throw new TypeError(\"The 'compilation' argument must be an instance of Compilation\");\n    }\n\n    let hooks = compilationHooksMap.get(compilation);\n\n    if (hooks === undefined) {\n      hooks = {\n        linkPreload: new SyncWaterfallHook([\"source\", \"chunk\"]),\n        linkPrefetch: new SyncWaterfallHook([\"source\", \"chunk\"])\n      };\n      compilationHooksMap.set(compilation, hooks);\n    }\n\n    return hooks;\n  }\n\n  constructor(runtimeRequirements) {\n    super(\"import chunk loading\", RuntimeModule.STAGE_ATTACH);\n    this._runtimeRequirements = runtimeRequirements;\n  }\n  /**\n   * @returns {string} runtime code\n   */\n\n\n  generate() {\n    const {\n      compilation,\n      chunk\n    } = this;\n    const {\n      runtimeTemplate,\n      chunkGraph,\n      outputOptions: {\n        importFunctionName,\n        importMetaName\n      }\n    } = compilation;\n    const fn = RuntimeGlobals.ensureChunkHandlers;\n\n    const withBaseURI = this._runtimeRequirements.has(RuntimeGlobals.baseURI);\n\n    const withExternalInstallChunk = this._runtimeRequirements.has(RuntimeGlobals.externalInstallChunk);\n\n    const withLoading = this._runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers);\n\n    const withOnChunkLoad = this._runtimeRequirements.has(RuntimeGlobals.onChunksLoaded);\n\n    const withHmr = this._runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n\n    const conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n    const hasJsMatcher = compileBooleanMatcher(conditionMap);\n    const initialChunkIds = getInitialChunkIds(chunk, chunkGraph);\n    const outputName = this.compilation.getPath(getChunkFilenameTemplate(chunk, this.compilation.outputOptions), {\n      chunk,\n      contentHashType: \"javascript\"\n    });\n    const rootOutputDir = getUndoPath(outputName, this.compilation.outputOptions.path, true);\n    const stateExpression = withHmr ? `${RuntimeGlobals.hmrRuntimeStatePrefix}_module` : undefined;\n    return Template.asString([withBaseURI ? Template.asString([`${RuntimeGlobals.baseURI} = new URL(${JSON.stringify(rootOutputDir)}, ${importMetaName}.url);`]) : \"// no baseURI\", \"\", \"// object to store loaded and loading chunks\", \"// undefined = chunk not loaded, null = chunk preloaded/prefetched\", \"// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\", `var installedChunks = ${stateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"}{`, Template.indent(Array.from(initialChunkIds, id => `${JSON.stringify(id)}: 0`).join(\",\\n\")), \"};\", \"\", withLoading || withExternalInstallChunk ? `var installChunk = ${runtimeTemplate.basicFunction(\"data\", [runtimeTemplate.destructureObject([\"ids\", \"modules\", \"runtime\"], \"data\"), '// add \"modules\" to the modules object,', '// then flag all \"ids\" as loaded and fire callback', \"var moduleId, chunkId, i = 0;\", \"for(moduleId in modules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(modules, moduleId)) {`, Template.indent(`${RuntimeGlobals.moduleFactories}[moduleId] = modules[moduleId];`), \"}\"]), \"}\", \"if(runtime) runtime(__webpack_require__);\", \"for(;i < ids.length; i++) {\", Template.indent([\"chunkId = ids[i];\", `if(${RuntimeGlobals.hasOwnProperty}(installedChunks, chunkId) && installedChunks[chunkId]) {`, Template.indent(\"installedChunks[chunkId][0]();\"), \"}\", \"installedChunks[ids[i]] = 0;\"]), \"}\", withOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}();` : \"\"])}` : \"// no install chunk\", \"\", withLoading ? Template.asString([`${fn}.j = ${runtimeTemplate.basicFunction(\"chunkId, promises\", hasJsMatcher !== false ? Template.indent([\"// import() chunk loading for javascript\", `var installedChunkData = ${RuntimeGlobals.hasOwnProperty}(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;`, 'if(installedChunkData !== 0) { // 0 means \"already installed\".', Template.indent([\"\", '// a Promise means \"currently loading\".', \"if(installedChunkData) {\", Template.indent([\"promises.push(installedChunkData[1]);\"]), \"} else {\", Template.indent([hasJsMatcher === true ? \"if(true) { // all chunks have JS\" : `if(${hasJsMatcher(\"chunkId\")}) {`, Template.indent([\"// setup Promise in chunk cache\", `var promise = ${importFunctionName}(${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId)).then(installChunk, ${runtimeTemplate.basicFunction(\"e\", [\"if(installedChunks[chunkId] !== 0) installedChunks[chunkId] = undefined;\", \"throw e;\"])});`, `var promise = Promise.race([promise, new Promise(${runtimeTemplate.expressionFunction(`installedChunkData = installedChunks[chunkId] = [resolve]`, \"resolve\")})])`, `promises.push(installedChunkData[1] = promise);`]), \"} else installedChunks[chunkId] = 0;\"]), \"}\"]), \"}\"]) : Template.indent([\"installedChunks[chunkId] = 0;\"]))};`]) : \"// no chunk on demand loading\", \"\", withExternalInstallChunk ? Template.asString([`${RuntimeGlobals.externalInstallChunk} = installChunk;`]) : \"// no external install chunk\", \"\", withOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}.j = ${runtimeTemplate.returningFunction(\"installedChunks[chunkId] === 0\", \"chunkId\")};` : \"// no on chunks loaded\"]);\n  }\n\n}\n\nmodule.exports = ModuleChunkLoadingRuntimeModule;","map":{"version":3,"sources":["E:/Coding/fixl solution/work1/addtocart/node_modules/webpack/lib/esm/ModuleChunkLoadingRuntimeModule.js"],"names":["SyncWaterfallHook","require","Compilation","RuntimeGlobals","RuntimeModule","Template","getChunkFilenameTemplate","chunkHasJs","getInitialChunkIds","compileBooleanMatcher","getUndoPath","compilationHooksMap","WeakMap","ModuleChunkLoadingRuntimeModule","getCompilationHooks","compilation","TypeError","hooks","get","undefined","linkPreload","linkPrefetch","set","constructor","runtimeRequirements","STAGE_ATTACH","_runtimeRequirements","generate","chunk","runtimeTemplate","chunkGraph","outputOptions","importFunctionName","importMetaName","fn","ensureChunkHandlers","withBaseURI","has","baseURI","withExternalInstallChunk","externalInstallChunk","withLoading","withOnChunkLoad","onChunksLoaded","withHmr","hmrDownloadUpdateHandlers","conditionMap","getChunkConditionMap","hasJsMatcher","initialChunkIds","outputName","getPath","contentHashType","rootOutputDir","path","stateExpression","hmrRuntimeStatePrefix","asString","JSON","stringify","indent","Array","from","id","join","basicFunction","destructureObject","hasOwnProperty","moduleFactories","getChunkScriptFilename","expressionFunction","returningFunction","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAwBC,OAAO,CAAC,SAAD,CAArC;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAA3B;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMG,aAAa,GAAGH,OAAO,CAAC,kBAAD,CAA7B;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,aAAD,CAAxB;;AACA,MAAM;AACLK,EAAAA,wBADK;AAELC,EAAAA;AAFK,IAGFN,OAAO,CAAC,uCAAD,CAHX;;AAIA,MAAM;AAAEO,EAAAA;AAAF,IAAyBP,OAAO,CAAC,8BAAD,CAAtC;;AACA,MAAMQ,qBAAqB,GAAGR,OAAO,CAAC,+BAAD,CAArC;;AACA,MAAM;AAAES,EAAAA;AAAF,IAAkBT,OAAO,CAAC,oBAAD,CAA/B;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AACA,MAAMU,mBAAmB,GAAG,IAAIC,OAAJ,EAA5B;;AAEA,MAAMC,+BAAN,SAA8CT,aAA9C,CAA4D;AAC3D;AACD;AACA;AACA;AAC2B,SAAnBU,mBAAmB,CAACC,WAAD,EAAc;AACvC,QAAI,EAAEA,WAAW,YAAYb,WAAzB,CAAJ,EAA2C;AAC1C,YAAM,IAAIc,SAAJ,CACL,+DADK,CAAN;AAGA;;AACD,QAAIC,KAAK,GAAGN,mBAAmB,CAACO,GAApB,CAAwBH,WAAxB,CAAZ;;AACA,QAAIE,KAAK,KAAKE,SAAd,EAAyB;AACxBF,MAAAA,KAAK,GAAG;AACPG,QAAAA,WAAW,EAAE,IAAIpB,iBAAJ,CAAsB,CAAC,QAAD,EAAW,OAAX,CAAtB,CADN;AAEPqB,QAAAA,YAAY,EAAE,IAAIrB,iBAAJ,CAAsB,CAAC,QAAD,EAAW,OAAX,CAAtB;AAFP,OAAR;AAIAW,MAAAA,mBAAmB,CAACW,GAApB,CAAwBP,WAAxB,EAAqCE,KAArC;AACA;;AACD,WAAOA,KAAP;AACA;;AAEDM,EAAAA,WAAW,CAACC,mBAAD,EAAsB;AAChC,UAAM,sBAAN,EAA8BpB,aAAa,CAACqB,YAA5C;AACA,SAAKC,oBAAL,GAA4BF,mBAA5B;AACA;AAED;AACD;AACA;;;AACCG,EAAAA,QAAQ,GAAG;AACV,UAAM;AAAEZ,MAAAA,WAAF;AAAea,MAAAA;AAAf,QAAyB,IAA/B;AACA,UAAM;AACLC,MAAAA,eADK;AAELC,MAAAA,UAFK;AAGLC,MAAAA,aAAa,EAAE;AAAEC,QAAAA,kBAAF;AAAsBC,QAAAA;AAAtB;AAHV,QAIFlB,WAJJ;AAKA,UAAMmB,EAAE,GAAG/B,cAAc,CAACgC,mBAA1B;;AACA,UAAMC,WAAW,GAAG,KAAKV,oBAAL,CAA0BW,GAA1B,CAA8BlC,cAAc,CAACmC,OAA7C,CAApB;;AACA,UAAMC,wBAAwB,GAAG,KAAKb,oBAAL,CAA0BW,GAA1B,CAChClC,cAAc,CAACqC,oBADiB,CAAjC;;AAGA,UAAMC,WAAW,GAAG,KAAKf,oBAAL,CAA0BW,GAA1B,CACnBlC,cAAc,CAACgC,mBADI,CAApB;;AAGA,UAAMO,eAAe,GAAG,KAAKhB,oBAAL,CAA0BW,GAA1B,CACvBlC,cAAc,CAACwC,cADQ,CAAxB;;AAGA,UAAMC,OAAO,GAAG,KAAKlB,oBAAL,CAA0BW,GAA1B,CACflC,cAAc,CAAC0C,yBADA,CAAhB;;AAGA,UAAMC,YAAY,GAAGhB,UAAU,CAACiB,oBAAX,CAAgCnB,KAAhC,EAAuCrB,UAAvC,CAArB;AACA,UAAMyC,YAAY,GAAGvC,qBAAqB,CAACqC,YAAD,CAA1C;AACA,UAAMG,eAAe,GAAGzC,kBAAkB,CAACoB,KAAD,EAAQE,UAAR,CAA1C;AAEA,UAAMoB,UAAU,GAAG,KAAKnC,WAAL,CAAiBoC,OAAjB,CAClB7C,wBAAwB,CAACsB,KAAD,EAAQ,KAAKb,WAAL,CAAiBgB,aAAzB,CADN,EAElB;AACCH,MAAAA,KADD;AAECwB,MAAAA,eAAe,EAAE;AAFlB,KAFkB,CAAnB;AAOA,UAAMC,aAAa,GAAG3C,WAAW,CAChCwC,UADgC,EAEhC,KAAKnC,WAAL,CAAiBgB,aAAjB,CAA+BuB,IAFC,EAGhC,IAHgC,CAAjC;AAMA,UAAMC,eAAe,GAAGX,OAAO,GAC3B,GAAEzC,cAAc,CAACqD,qBAAsB,SADZ,GAE5BrC,SAFH;AAIA,WAAOd,QAAQ,CAACoD,QAAT,CAAkB,CACxBrB,WAAW,GACR/B,QAAQ,CAACoD,QAAT,CAAkB,CACjB,GAAEtD,cAAc,CAACmC,OAAQ,cAAaoB,IAAI,CAACC,SAAL,CACtCN,aADsC,CAErC,KAAIpB,cAAe,QAHH,CAAlB,CADQ,GAMR,eAPqB,EAQxB,EARwB,EASxB,8CATwB,EAUxB,oEAVwB,EAWxB,iEAXwB,EAYvB,yBACAsB,eAAe,GAAI,GAAEA,eAAgB,MAAKA,eAAgB,MAA3C,GAAmD,EAClE,GAduB,EAexBlD,QAAQ,CAACuD,MAAT,CACCC,KAAK,CAACC,IAAN,CAAWb,eAAX,EAA4Bc,EAAE,IAAK,GAAEL,IAAI,CAACC,SAAL,CAAeI,EAAf,CAAmB,KAAxD,EAA8DC,IAA9D,CACC,KADD,CADD,CAfwB,EAoBxB,IApBwB,EAqBxB,EArBwB,EAsBxBvB,WAAW,IAAIF,wBAAf,GACI,sBAAqBV,eAAe,CAACoC,aAAhB,CAA8B,MAA9B,EAAsC,CAC5DpC,eAAe,CAACqC,iBAAhB,CACC,CAAC,KAAD,EAAQ,SAAR,EAAmB,SAAnB,CADD,EAEC,MAFD,CAD4D,EAK5D,yCAL4D,EAM5D,oDAN4D,EAO5D,+BAP4D,EAQ5D,4BAR4D,EAS5D7D,QAAQ,CAACuD,MAAT,CAAgB,CACd,MAAKzD,cAAc,CAACgE,cAAe,wBADrB,EAEf9D,QAAQ,CAACuD,MAAT,CACE,GAAEzD,cAAc,CAACiE,eAAgB,iCADnC,CAFe,EAKf,GALe,CAAhB,CAT4D,EAgB5D,GAhB4D,EAiB5D,2CAjB4D,EAkB5D,6BAlB4D,EAmB5D/D,QAAQ,CAACuD,MAAT,CAAgB,CACf,mBADe,EAEd,MAAKzD,cAAc,CAACgE,cAAe,2DAFrB,EAGf9D,QAAQ,CAACuD,MAAT,CAAgB,gCAAhB,CAHe,EAIf,GAJe,EAKf,8BALe,CAAhB,CAnB4D,EA0B5D,GA1B4D,EA2B5DlB,eAAe,GAAI,GAAEvC,cAAc,CAACwC,cAAe,KAApC,GAA2C,EA3BE,CAAtC,CA4BnB,EA7BN,GA8BG,qBApDqB,EAqDxB,EArDwB,EAsDxBF,WAAW,GACRpC,QAAQ,CAACoD,QAAT,CAAkB,CACjB,GAAEvB,EAAG,QAAOL,eAAe,CAACoC,aAAhB,CACZ,mBADY,EAEZjB,YAAY,KAAK,KAAjB,GACG3C,QAAQ,CAACuD,MAAT,CAAgB,CAChB,0CADgB,EAEf,4BAA2BzD,cAAc,CAACgE,cAAe,oEAF1C,EAGhB,gEAHgB,EAIhB9D,QAAQ,CAACuD,MAAT,CAAgB,CACf,EADe,EAEf,yCAFe,EAGf,0BAHe,EAIfvD,QAAQ,CAACuD,MAAT,CAAgB,CACf,uCADe,CAAhB,CAJe,EAOf,UAPe,EAQfvD,QAAQ,CAACuD,MAAT,CAAgB,CACfZ,YAAY,KAAK,IAAjB,GACG,kCADH,GAEI,MAAKA,YAAY,CAAC,SAAD,CAAY,KAHlB,EAIf3C,QAAQ,CAACuD,MAAT,CAAgB,CACf,iCADe,EAEd,iBAAgB5B,kBAAmB,IAAG0B,IAAI,CAACC,SAAL,CACtCN,aADsC,CAErC,MACDlD,cAAc,CAACkE,sBACf,iCAAgCxC,eAAe,CAACoC,aAAhB,CAChC,GADgC,EAEhC,CACC,0EADD,EAEC,UAFD,CAFgC,CAM/B,IAZa,EAad,oDAAmDpC,eAAe,CAACyC,kBAAhB,CAClD,2DADkD,EAEnD,SAFmD,CAGlD,KAhBa,EAiBd,iDAjBc,CAAhB,CAJe,EAuBf,sCAvBe,CAAhB,CARe,EAiCf,GAjCe,CAAhB,CAJgB,EAuChB,GAvCgB,CAAhB,CADH,GA0CGjE,QAAQ,CAACuD,MAAT,CAAgB,CAAC,+BAAD,CAAhB,CA5CS,CA6CX,GA9CgB,CAAlB,CADQ,GAiDR,+BAvGqB,EAwGxB,EAxGwB,EAyGxBrB,wBAAwB,GACrBlC,QAAQ,CAACoD,QAAT,CAAkB,CACjB,GAAEtD,cAAc,CAACqC,oBAAqB,kBADrB,CAAlB,CADqB,GAIrB,8BA7GqB,EA8GxB,EA9GwB,EA+GxBE,eAAe,GACX,GACDvC,cAAc,CAACwC,cACd,QAAOd,eAAe,CAAC0C,iBAAhB,CACR,gCADQ,EAER,SAFQ,CAGN,GANU,GAOZ,wBAtHqB,CAAlB,CAAP;AAwHA;;AAhM0D;;AAmM5DC,MAAM,CAACC,OAAP,GAAiB5D,+BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst { SyncWaterfallHook } = require(\"tapable\");\nconst Compilation = require(\"../Compilation\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst {\n\tgetChunkFilenameTemplate,\n\tchunkHasJs\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst { getInitialChunkIds } = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\nconst { getUndoPath } = require(\"../util/identifier\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/**\n * @typedef {Object} JsonpCompilationPluginHooks\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPreload\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPrefetch\n */\n\n/** @type {WeakMap<Compilation, JsonpCompilationPluginHooks>} */\nconst compilationHooksMap = new WeakMap();\n\nclass ModuleChunkLoadingRuntimeModule extends RuntimeModule {\n\t/**\n\t * @param {Compilation} compilation the compilation\n\t * @returns {JsonpCompilationPluginHooks} hooks\n\t */\n\tstatic getCompilationHooks(compilation) {\n\t\tif (!(compilation instanceof Compilation)) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"The 'compilation' argument must be an instance of Compilation\"\n\t\t\t);\n\t\t}\n\t\tlet hooks = compilationHooksMap.get(compilation);\n\t\tif (hooks === undefined) {\n\t\t\thooks = {\n\t\t\t\tlinkPreload: new SyncWaterfallHook([\"source\", \"chunk\"]),\n\t\t\t\tlinkPrefetch: new SyncWaterfallHook([\"source\", \"chunk\"])\n\t\t\t};\n\t\t\tcompilationHooksMap.set(compilation, hooks);\n\t\t}\n\t\treturn hooks;\n\t}\n\n\tconstructor(runtimeRequirements) {\n\t\tsuper(\"import chunk loading\", RuntimeModule.STAGE_ATTACH);\n\t\tthis._runtimeRequirements = runtimeRequirements;\n\t}\n\n\t/**\n\t * @returns {string} runtime code\n\t */\n\tgenerate() {\n\t\tconst { compilation, chunk } = this;\n\t\tconst {\n\t\t\truntimeTemplate,\n\t\t\tchunkGraph,\n\t\t\toutputOptions: { importFunctionName, importMetaName }\n\t\t} = compilation;\n\t\tconst fn = RuntimeGlobals.ensureChunkHandlers;\n\t\tconst withBaseURI = this._runtimeRequirements.has(RuntimeGlobals.baseURI);\n\t\tconst withExternalInstallChunk = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.externalInstallChunk\n\t\t);\n\t\tconst withLoading = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t);\n\t\tconst withOnChunkLoad = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t);\n\t\tconst withHmr = this._runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t);\n\t\tconst conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n\t\tconst hasJsMatcher = compileBooleanMatcher(conditionMap);\n\t\tconst initialChunkIds = getInitialChunkIds(chunk, chunkGraph);\n\n\t\tconst outputName = this.compilation.getPath(\n\t\t\tgetChunkFilenameTemplate(chunk, this.compilation.outputOptions),\n\t\t\t{\n\t\t\t\tchunk,\n\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t}\n\t\t);\n\t\tconst rootOutputDir = getUndoPath(\n\t\t\toutputName,\n\t\t\tthis.compilation.outputOptions.path,\n\t\t\ttrue\n\t\t);\n\n\t\tconst stateExpression = withHmr\n\t\t\t? `${RuntimeGlobals.hmrRuntimeStatePrefix}_module`\n\t\t\t: undefined;\n\n\t\treturn Template.asString([\n\t\t\twithBaseURI\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${RuntimeGlobals.baseURI} = new URL(${JSON.stringify(\n\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t)}, ${importMetaName}.url);`\n\t\t\t\t  ])\n\t\t\t\t: \"// no baseURI\",\n\t\t\t\"\",\n\t\t\t\"// object to store loaded and loading chunks\",\n\t\t\t\"// undefined = chunk not loaded, null = chunk preloaded/prefetched\",\n\t\t\t\"// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\",\n\t\t\t`var installedChunks = ${\n\t\t\t\tstateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"\n\t\t\t}{`,\n\t\t\tTemplate.indent(\n\t\t\t\tArray.from(initialChunkIds, id => `${JSON.stringify(id)}: 0`).join(\n\t\t\t\t\t\",\\n\"\n\t\t\t\t)\n\t\t\t),\n\t\t\t\"};\",\n\t\t\t\"\",\n\t\t\twithLoading || withExternalInstallChunk\n\t\t\t\t? `var installChunk = ${runtimeTemplate.basicFunction(\"data\", [\n\t\t\t\t\t\truntimeTemplate.destructureObject(\n\t\t\t\t\t\t\t[\"ids\", \"modules\", \"runtime\"],\n\t\t\t\t\t\t\t\"data\"\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'// add \"modules\" to the modules object,',\n\t\t\t\t\t\t'// then flag all \"ids\" as loaded and fire callback',\n\t\t\t\t\t\t\"var moduleId, chunkId, i = 0;\",\n\t\t\t\t\t\t\"for(moduleId in modules) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(modules, moduleId)) {`,\n\t\t\t\t\t\t\tTemplate.indent(\n\t\t\t\t\t\t\t\t`${RuntimeGlobals.moduleFactories}[moduleId] = modules[moduleId];`\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"if(runtime) runtime(__webpack_require__);\",\n\t\t\t\t\t\t\"for(;i < ids.length; i++) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"chunkId = ids[i];\",\n\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(installedChunks, chunkId) && installedChunks[chunkId]) {`,\n\t\t\t\t\t\t\tTemplate.indent(\"installedChunks[chunkId][0]();\"),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"installedChunks[ids[i]] = 0;\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\twithOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}();` : \"\"\n\t\t\t\t  ])}`\n\t\t\t\t: \"// no install chunk\",\n\t\t\t\"\",\n\t\t\twithLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${fn}.j = ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\"chunkId, promises\",\n\t\t\t\t\t\t\thasJsMatcher !== false\n\t\t\t\t\t\t\t\t? Template.indent([\n\t\t\t\t\t\t\t\t\t\t\"// import() chunk loading for javascript\",\n\t\t\t\t\t\t\t\t\t\t`var installedChunkData = ${RuntimeGlobals.hasOwnProperty}(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;`,\n\t\t\t\t\t\t\t\t\t\t'if(installedChunkData !== 0) { // 0 means \"already installed\".',\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\t\t'// a Promise means \"currently loading\".',\n\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunkData) {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\"promises.push(installedChunkData[1]);\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"} else {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\thasJsMatcher === true\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"if(true) { // all chunks have JS\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t: `if(${hasJsMatcher(\"chunkId\")}) {`,\n\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"// setup Promise in chunk cache\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t`var promise = ${importFunctionName}(${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t\t\t\t\t\t)} + ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.getChunkScriptFilename\n\t\t\t\t\t\t\t\t\t\t\t\t\t}(chunkId)).then(installChunk, ${runtimeTemplate.basicFunction(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"e\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"if(installedChunks[chunkId] !== 0) installedChunks[chunkId] = undefined;\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"throw e;\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t)});`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t`var promise = Promise.race([promise, new Promise(${runtimeTemplate.expressionFunction(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`installedChunkData = installedChunks[chunkId] = [resolve]`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"resolve\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t)})])`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t`promises.push(installedChunkData[1] = promise);`\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\"} else installedChunks[chunkId] = 0;\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t\t: Template.indent([\"installedChunks[chunkId] = 0;\"])\n\t\t\t\t\t\t)};`\n\t\t\t\t  ])\n\t\t\t\t: \"// no chunk on demand loading\",\n\t\t\t\"\",\n\t\t\twithExternalInstallChunk\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${RuntimeGlobals.externalInstallChunk} = installChunk;`\n\t\t\t\t  ])\n\t\t\t\t: \"// no external install chunk\",\n\t\t\t\"\",\n\t\t\twithOnChunkLoad\n\t\t\t\t? `${\n\t\t\t\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t\t\t  }.j = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\"installedChunks[chunkId] === 0\",\n\t\t\t\t\t\t\"chunkId\"\n\t\t\t\t  )};`\n\t\t\t\t: \"// no on chunks loaded\"\n\t\t]);\n\t}\n}\n\nmodule.exports = ModuleChunkLoadingRuntimeModule;\n"]},"metadata":{},"sourceType":"script"}