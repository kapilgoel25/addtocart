{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"./StatsPrinter\")} StatsPrinter */\n\n/** @typedef {import(\"./StatsPrinter\").StatsPrinterContext} StatsPrinterContext */\n\nconst plural = (n, singular, plural) => n === 1 ? singular : plural;\n/**\n * @param {Record<string, number>} sizes sizes by source type\n * @param {Object} options options\n * @param {(number) => string=} options.formatSize size formatter\n * @returns {string} text\n */\n\n\nconst printSizes = (sizes, _ref) => {\n  let {\n    formatSize = n => `${n}`\n  } = _ref;\n  const keys = Object.keys(sizes);\n\n  if (keys.length > 1) {\n    return keys.map(key => `${formatSize(sizes[key])} (${key})`).join(\" \");\n  } else if (keys.length === 1) {\n    return formatSize(sizes[keys[0]]);\n  }\n};\n\nconst mapLines = (str, fn) => str.split(\"\\n\").map(fn).join(\"\\n\");\n/**\n * @param {number} n a number\n * @returns {string} number as two digit string, leading 0\n */\n\n\nconst twoDigit = n => n >= 10 ? `${n}` : `0${n}`;\n\nconst isValidId = id => {\n  return typeof id === \"number\" || id;\n};\n/** @type {Record<string, (thing: any, context: StatsPrinterContext, printer: StatsPrinter) => string | void>} */\n\n\nconst SIMPLE_PRINTERS = {\n  \"compilation.summary!\": (_, _ref2) => {\n    let {\n      type,\n      bold,\n      green,\n      red,\n      yellow,\n      formatDateTime,\n      formatTime,\n      compilation: {\n        name,\n        hash,\n        version,\n        time,\n        builtAt,\n        errorsCount,\n        warningsCount\n      }\n    } = _ref2;\n    const root = type === \"compilation.summary!\";\n    const warningsMessage = warningsCount > 0 ? yellow(`${warningsCount} ${plural(warningsCount, \"warning\", \"warnings\")}`) : \"\";\n    const errorsMessage = errorsCount > 0 ? red(`${errorsCount} ${plural(errorsCount, \"error\", \"errors\")}`) : \"\";\n    const timeMessage = root && time ? ` in ${formatTime(time)}` : \"\";\n    const hashMessage = hash ? ` (${hash})` : \"\";\n    const builtAtMessage = root && builtAt ? `${formatDateTime(builtAt)}: ` : \"\";\n    const versionMessage = root && version ? `webpack ${version}` : \"\";\n    const nameMessage = root && name ? bold(name) : name ? `Child ${bold(name)}` : root ? \"\" : \"Child\";\n    const subjectMessage = nameMessage && versionMessage ? `${nameMessage} (${versionMessage})` : versionMessage || nameMessage || \"webpack\";\n    let statusMessage;\n\n    if (errorsMessage && warningsMessage) {\n      statusMessage = `compiled with ${errorsMessage} and ${warningsMessage}`;\n    } else if (errorsMessage) {\n      statusMessage = `compiled with ${errorsMessage}`;\n    } else if (warningsMessage) {\n      statusMessage = `compiled with ${warningsMessage}`;\n    } else if (errorsCount === 0 && warningsCount === 0) {\n      statusMessage = `compiled ${green(\"successfully\")}`;\n    } else {\n      statusMessage = `compiled`;\n    }\n\n    if (builtAtMessage || versionMessage || errorsMessage || warningsMessage || errorsCount === 0 && warningsCount === 0 || timeMessage || hashMessage) return `${builtAtMessage}${subjectMessage} ${statusMessage}${timeMessage}${hashMessage}`;\n  },\n  \"compilation.filteredWarningDetailsCount\": count => count ? `${count} ${plural(count, \"warning has\", \"warnings have\")} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.` : undefined,\n  \"compilation.filteredErrorDetailsCount\": (count, _ref3) => {\n    let {\n      yellow\n    } = _ref3;\n    return count ? yellow(`${count} ${plural(count, \"error has\", \"errors have\")} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.`) : undefined;\n  },\n  \"compilation.env\": (env, _ref4) => {\n    let {\n      bold\n    } = _ref4;\n    return env ? `Environment (--env): ${bold(JSON.stringify(env, null, 2))}` : undefined;\n  },\n  \"compilation.publicPath\": (publicPath, _ref5) => {\n    let {\n      bold\n    } = _ref5;\n    return `PublicPath: ${bold(publicPath || \"(none)\")}`;\n  },\n  \"compilation.entrypoints\": (entrypoints, context, printer) => Array.isArray(entrypoints) ? undefined : printer.print(context.type, Object.values(entrypoints), { ...context,\n    chunkGroupKind: \"Entrypoint\"\n  }),\n  \"compilation.namedChunkGroups\": (namedChunkGroups, context, printer) => {\n    if (!Array.isArray(namedChunkGroups)) {\n      const {\n        compilation: {\n          entrypoints\n        }\n      } = context;\n      let chunkGroups = Object.values(namedChunkGroups);\n\n      if (entrypoints) {\n        chunkGroups = chunkGroups.filter(group => !Object.prototype.hasOwnProperty.call(entrypoints, group.name));\n      }\n\n      return printer.print(context.type, chunkGroups, { ...context,\n        chunkGroupKind: \"Chunk Group\"\n      });\n    }\n  },\n  \"compilation.assetsByChunkName\": () => \"\",\n  \"compilation.filteredModules\": filteredModules => filteredModules > 0 ? `${filteredModules} ${plural(filteredModules, \"module\", \"modules\")}` : undefined,\n  \"compilation.filteredAssets\": (filteredAssets, _ref6) => {\n    let {\n      compilation: {\n        assets\n      }\n    } = _ref6;\n    return filteredAssets > 0 ? `${filteredAssets} ${plural(filteredAssets, \"asset\", \"assets\")}` : undefined;\n  },\n  \"compilation.logging\": (logging, context, printer) => Array.isArray(logging) ? undefined : printer.print(context.type, Object.entries(logging).map(_ref7 => {\n    let [name, value] = _ref7;\n    return { ...value,\n      name\n    };\n  }), context),\n  \"compilation.warningsInChildren!\": (_, _ref8) => {\n    let {\n      yellow,\n      compilation\n    } = _ref8;\n\n    if (!compilation.children && compilation.warningsCount > 0 && compilation.warnings) {\n      const childWarnings = compilation.warningsCount - compilation.warnings.length;\n\n      if (childWarnings > 0) {\n        return yellow(`${childWarnings} ${plural(childWarnings, \"WARNING\", \"WARNINGS\")} in child compilations${compilation.children ? \"\" : \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"}`);\n      }\n    }\n  },\n  \"compilation.errorsInChildren!\": (_, _ref9) => {\n    let {\n      red,\n      compilation\n    } = _ref9;\n\n    if (!compilation.children && compilation.errorsCount > 0 && compilation.errors) {\n      const childErrors = compilation.errorsCount - compilation.errors.length;\n\n      if (childErrors > 0) {\n        return red(`${childErrors} ${plural(childErrors, \"ERROR\", \"ERRORS\")} in child compilations${compilation.children ? \"\" : \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"}`);\n      }\n    }\n  },\n  \"asset.type\": type => type,\n  \"asset.name\": (name, _ref10) => {\n    let {\n      formatFilename,\n      asset: {\n        isOverSizeLimit\n      }\n    } = _ref10;\n    return formatFilename(name, isOverSizeLimit);\n  },\n  \"asset.size\": (size, _ref11) => {\n    let {\n      asset: {\n        isOverSizeLimit\n      },\n      yellow,\n      green,\n      formatSize\n    } = _ref11;\n    return isOverSizeLimit ? yellow(formatSize(size)) : formatSize(size);\n  },\n  \"asset.emitted\": (emitted, _ref12) => {\n    let {\n      green,\n      formatFlag\n    } = _ref12;\n    return emitted ? green(formatFlag(\"emitted\")) : undefined;\n  },\n  \"asset.comparedForEmit\": (comparedForEmit, _ref13) => {\n    let {\n      yellow,\n      formatFlag\n    } = _ref13;\n    return comparedForEmit ? yellow(formatFlag(\"compared for emit\")) : undefined;\n  },\n  \"asset.cached\": (cached, _ref14) => {\n    let {\n      green,\n      formatFlag\n    } = _ref14;\n    return cached ? green(formatFlag(\"cached\")) : undefined;\n  },\n  \"asset.isOverSizeLimit\": (isOverSizeLimit, _ref15) => {\n    let {\n      yellow,\n      formatFlag\n    } = _ref15;\n    return isOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined;\n  },\n  \"asset.info.immutable\": (immutable, _ref16) => {\n    let {\n      green,\n      formatFlag\n    } = _ref16;\n    return immutable ? green(formatFlag(\"immutable\")) : undefined;\n  },\n  \"asset.info.javascriptModule\": (javascriptModule, _ref17) => {\n    let {\n      formatFlag\n    } = _ref17;\n    return javascriptModule ? formatFlag(\"javascript module\") : undefined;\n  },\n  \"asset.info.sourceFilename\": (sourceFilename, _ref18) => {\n    let {\n      formatFlag\n    } = _ref18;\n    return sourceFilename ? formatFlag(sourceFilename === true ? \"from source file\" : `from: ${sourceFilename}`) : undefined;\n  },\n  \"asset.info.development\": (development, _ref19) => {\n    let {\n      green,\n      formatFlag\n    } = _ref19;\n    return development ? green(formatFlag(\"dev\")) : undefined;\n  },\n  \"asset.info.hotModuleReplacement\": (hotModuleReplacement, _ref20) => {\n    let {\n      green,\n      formatFlag\n    } = _ref20;\n    return hotModuleReplacement ? green(formatFlag(\"hmr\")) : undefined;\n  },\n  \"asset.separator!\": () => \"\\n\",\n  \"asset.filteredRelated\": (filteredRelated, _ref21) => {\n    let {\n      asset: {\n        related\n      }\n    } = _ref21;\n    return filteredRelated > 0 ? `${filteredRelated} related ${plural(filteredRelated, \"asset\", \"assets\")}` : undefined;\n  },\n  \"asset.filteredChildren\": filteredChildren => filteredChildren > 0 ? `${filteredChildren} ${plural(filteredChildren, \"asset\", \"assets\")}` : undefined,\n  assetChunk: (id, _ref22) => {\n    let {\n      formatChunkId\n    } = _ref22;\n    return formatChunkId(id);\n  },\n  assetChunkName: name => name,\n  assetChunkIdHint: name => name,\n  \"module.type\": type => type !== \"module\" ? type : undefined,\n  \"module.id\": (id, _ref23) => {\n    let {\n      formatModuleId\n    } = _ref23;\n    return isValidId(id) ? formatModuleId(id) : undefined;\n  },\n  \"module.name\": (name, _ref24) => {\n    let {\n      bold\n    } = _ref24;\n    const [, prefix, resource] = /^(.*!)?([^!]*)$/.exec(name);\n    return (prefix || \"\") + bold(resource);\n  },\n  \"module.identifier\": identifier => undefined,\n  \"module.layer\": (layer, _ref25) => {\n    let {\n      formatLayer\n    } = _ref25;\n    return layer ? formatLayer(layer) : undefined;\n  },\n  \"module.sizes\": printSizes,\n  \"module.chunks[]\": (id, _ref26) => {\n    let {\n      formatChunkId\n    } = _ref26;\n    return formatChunkId(id);\n  },\n  \"module.depth\": (depth, _ref27) => {\n    let {\n      formatFlag\n    } = _ref27;\n    return depth !== null ? formatFlag(`depth ${depth}`) : undefined;\n  },\n  \"module.cacheable\": (cacheable, _ref28) => {\n    let {\n      formatFlag,\n      red\n    } = _ref28;\n    return cacheable === false ? red(formatFlag(\"not cacheable\")) : undefined;\n  },\n  \"module.orphan\": (orphan, _ref29) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref29;\n    return orphan ? yellow(formatFlag(\"orphan\")) : undefined;\n  },\n  \"module.runtime\": (runtime, _ref30) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref30;\n    return runtime ? yellow(formatFlag(\"runtime\")) : undefined;\n  },\n  \"module.optional\": (optional, _ref31) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref31;\n    return optional ? yellow(formatFlag(\"optional\")) : undefined;\n  },\n  \"module.dependent\": (dependent, _ref32) => {\n    let {\n      formatFlag,\n      cyan\n    } = _ref32;\n    return dependent ? cyan(formatFlag(\"dependent\")) : undefined;\n  },\n  \"module.built\": (built, _ref33) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref33;\n    return built ? yellow(formatFlag(\"built\")) : undefined;\n  },\n  \"module.codeGenerated\": (codeGenerated, _ref34) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref34;\n    return codeGenerated ? yellow(formatFlag(\"code generated\")) : undefined;\n  },\n  \"module.buildTimeExecuted\": (buildTimeExecuted, _ref35) => {\n    let {\n      formatFlag,\n      green\n    } = _ref35;\n    return buildTimeExecuted ? green(formatFlag(\"build time executed\")) : undefined;\n  },\n  \"module.cached\": (cached, _ref36) => {\n    let {\n      formatFlag,\n      green\n    } = _ref36;\n    return cached ? green(formatFlag(\"cached\")) : undefined;\n  },\n  \"module.assets\": (assets, _ref37) => {\n    let {\n      formatFlag,\n      magenta\n    } = _ref37;\n    return assets && assets.length ? magenta(formatFlag(`${assets.length} ${plural(assets.length, \"asset\", \"assets\")}`)) : undefined;\n  },\n  \"module.warnings\": (warnings, _ref38) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref38;\n    return warnings === true ? yellow(formatFlag(\"warnings\")) : warnings ? yellow(formatFlag(`${warnings} ${plural(warnings, \"warning\", \"warnings\")}`)) : undefined;\n  },\n  \"module.errors\": (errors, _ref39) => {\n    let {\n      formatFlag,\n      red\n    } = _ref39;\n    return errors === true ? red(formatFlag(\"errors\")) : errors ? red(formatFlag(`${errors} ${plural(errors, \"error\", \"errors\")}`)) : undefined;\n  },\n  \"module.providedExports\": (providedExports, _ref40) => {\n    let {\n      formatFlag,\n      cyan\n    } = _ref40;\n\n    if (Array.isArray(providedExports)) {\n      if (providedExports.length === 0) return cyan(formatFlag(\"no exports\"));\n      return cyan(formatFlag(`exports: ${providedExports.join(\", \")}`));\n    }\n  },\n  \"module.usedExports\": (usedExports, _ref41) => {\n    let {\n      formatFlag,\n      cyan,\n      module\n    } = _ref41;\n\n    if (usedExports !== true) {\n      if (usedExports === null) return cyan(formatFlag(\"used exports unknown\"));\n      if (usedExports === false) return cyan(formatFlag(\"module unused\"));\n\n      if (Array.isArray(usedExports)) {\n        if (usedExports.length === 0) return cyan(formatFlag(\"no exports used\"));\n        const providedExportsCount = Array.isArray(module.providedExports) ? module.providedExports.length : null;\n\n        if (providedExportsCount !== null && providedExportsCount === usedExports.length) {\n          return cyan(formatFlag(\"all exports used\"));\n        } else {\n          return cyan(formatFlag(`only some exports used: ${usedExports.join(\", \")}`));\n        }\n      }\n    }\n  },\n  \"module.optimizationBailout[]\": (optimizationBailout, _ref42) => {\n    let {\n      yellow\n    } = _ref42;\n    return yellow(optimizationBailout);\n  },\n  \"module.issuerPath\": (issuerPath, _ref43) => {\n    let {\n      module\n    } = _ref43;\n    return module.profile ? undefined : \"\";\n  },\n  \"module.profile\": profile => undefined,\n  \"module.filteredModules\": filteredModules => filteredModules > 0 ? `${filteredModules} nested ${plural(filteredModules, \"module\", \"modules\")}` : undefined,\n  \"module.filteredReasons\": filteredReasons => filteredReasons > 0 ? `${filteredReasons} ${plural(filteredReasons, \"reason\", \"reasons\")}` : undefined,\n  \"module.filteredChildren\": filteredChildren => filteredChildren > 0 ? `${filteredChildren} ${plural(filteredChildren, \"module\", \"modules\")}` : undefined,\n  \"module.separator!\": () => \"\\n\",\n  \"moduleIssuer.id\": (id, _ref44) => {\n    let {\n      formatModuleId\n    } = _ref44;\n    return formatModuleId(id);\n  },\n  \"moduleIssuer.profile.total\": (value, _ref45) => {\n    let {\n      formatTime\n    } = _ref45;\n    return formatTime(value);\n  },\n  \"moduleReason.type\": type => type,\n  \"moduleReason.userRequest\": (userRequest, _ref46) => {\n    let {\n      cyan\n    } = _ref46;\n    return cyan(userRequest);\n  },\n  \"moduleReason.moduleId\": (moduleId, _ref47) => {\n    let {\n      formatModuleId\n    } = _ref47;\n    return isValidId(moduleId) ? formatModuleId(moduleId) : undefined;\n  },\n  \"moduleReason.module\": (module, _ref48) => {\n    let {\n      magenta\n    } = _ref48;\n    return magenta(module);\n  },\n  \"moduleReason.loc\": loc => loc,\n  \"moduleReason.explanation\": (explanation, _ref49) => {\n    let {\n      cyan\n    } = _ref49;\n    return cyan(explanation);\n  },\n  \"moduleReason.active\": (active, _ref50) => {\n    let {\n      formatFlag\n    } = _ref50;\n    return active ? undefined : formatFlag(\"inactive\");\n  },\n  \"moduleReason.resolvedModule\": (module, _ref51) => {\n    let {\n      magenta\n    } = _ref51;\n    return magenta(module);\n  },\n  \"moduleReason.filteredChildren\": filteredChildren => filteredChildren > 0 ? `${filteredChildren} ${plural(filteredChildren, \"reason\", \"reasons\")}` : undefined,\n  \"module.profile.total\": (value, _ref52) => {\n    let {\n      formatTime\n    } = _ref52;\n    return formatTime(value);\n  },\n  \"module.profile.resolving\": (value, _ref53) => {\n    let {\n      formatTime\n    } = _ref53;\n    return `resolving: ${formatTime(value)}`;\n  },\n  \"module.profile.restoring\": (value, _ref54) => {\n    let {\n      formatTime\n    } = _ref54;\n    return `restoring: ${formatTime(value)}`;\n  },\n  \"module.profile.integration\": (value, _ref55) => {\n    let {\n      formatTime\n    } = _ref55;\n    return `integration: ${formatTime(value)}`;\n  },\n  \"module.profile.building\": (value, _ref56) => {\n    let {\n      formatTime\n    } = _ref56;\n    return `building: ${formatTime(value)}`;\n  },\n  \"module.profile.storing\": (value, _ref57) => {\n    let {\n      formatTime\n    } = _ref57;\n    return `storing: ${formatTime(value)}`;\n  },\n  \"module.profile.additionalResolving\": (value, _ref58) => {\n    let {\n      formatTime\n    } = _ref58;\n    return value ? `additional resolving: ${formatTime(value)}` : undefined;\n  },\n  \"module.profile.additionalIntegration\": (value, _ref59) => {\n    let {\n      formatTime\n    } = _ref59;\n    return value ? `additional integration: ${formatTime(value)}` : undefined;\n  },\n  \"chunkGroup.kind!\": (_, _ref60) => {\n    let {\n      chunkGroupKind\n    } = _ref60;\n    return chunkGroupKind;\n  },\n  \"chunkGroup.separator!\": () => \"\\n\",\n  \"chunkGroup.name\": (name, _ref61) => {\n    let {\n      bold\n    } = _ref61;\n    return bold(name);\n  },\n  \"chunkGroup.isOverSizeLimit\": (isOverSizeLimit, _ref62) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref62;\n    return isOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined;\n  },\n  \"chunkGroup.assetsSize\": (size, _ref63) => {\n    let {\n      formatSize\n    } = _ref63;\n    return size ? formatSize(size) : undefined;\n  },\n  \"chunkGroup.auxiliaryAssetsSize\": (size, _ref64) => {\n    let {\n      formatSize\n    } = _ref64;\n    return size ? `(${formatSize(size)})` : undefined;\n  },\n  \"chunkGroup.filteredAssets\": n => n > 0 ? `${n} ${plural(n, \"asset\", \"assets\")}` : undefined,\n  \"chunkGroup.filteredAuxiliaryAssets\": n => n > 0 ? `${n} auxiliary ${plural(n, \"asset\", \"assets\")}` : undefined,\n  \"chunkGroup.is!\": () => \"=\",\n  \"chunkGroupAsset.name\": (asset, _ref65) => {\n    let {\n      green\n    } = _ref65;\n    return green(asset);\n  },\n  \"chunkGroupAsset.size\": (size, _ref66) => {\n    let {\n      formatSize,\n      chunkGroup\n    } = _ref66;\n    return chunkGroup.assets.length > 1 || chunkGroup.auxiliaryAssets && chunkGroup.auxiliaryAssets.length > 0 ? formatSize(size) : undefined;\n  },\n  \"chunkGroup.children\": (children, context, printer) => Array.isArray(children) ? undefined : printer.print(context.type, Object.keys(children).map(key => ({\n    type: key,\n    children: children[key]\n  })), context),\n  \"chunkGroupChildGroup.type\": type => `${type}:`,\n  \"chunkGroupChild.assets[]\": (file, _ref67) => {\n    let {\n      formatFilename\n    } = _ref67;\n    return formatFilename(file);\n  },\n  \"chunkGroupChild.chunks[]\": (id, _ref68) => {\n    let {\n      formatChunkId\n    } = _ref68;\n    return formatChunkId(id);\n  },\n  \"chunkGroupChild.name\": name => name ? `(name: ${name})` : undefined,\n  \"chunk.id\": (id, _ref69) => {\n    let {\n      formatChunkId\n    } = _ref69;\n    return formatChunkId(id);\n  },\n  \"chunk.files[]\": (file, _ref70) => {\n    let {\n      formatFilename\n    } = _ref70;\n    return formatFilename(file);\n  },\n  \"chunk.names[]\": name => name,\n  \"chunk.idHints[]\": name => name,\n  \"chunk.runtime[]\": name => name,\n  \"chunk.sizes\": (sizes, context) => printSizes(sizes, context),\n  \"chunk.parents[]\": (parents, context) => context.formatChunkId(parents, \"parent\"),\n  \"chunk.siblings[]\": (siblings, context) => context.formatChunkId(siblings, \"sibling\"),\n  \"chunk.children[]\": (children, context) => context.formatChunkId(children, \"child\"),\n  \"chunk.childrenByOrder\": (childrenByOrder, context, printer) => Array.isArray(childrenByOrder) ? undefined : printer.print(context.type, Object.keys(childrenByOrder).map(key => ({\n    type: key,\n    children: childrenByOrder[key]\n  })), context),\n  \"chunk.childrenByOrder[].type\": type => `${type}:`,\n  \"chunk.childrenByOrder[].children[]\": (id, _ref71) => {\n    let {\n      formatChunkId\n    } = _ref71;\n    return isValidId(id) ? formatChunkId(id) : undefined;\n  },\n  \"chunk.entry\": (entry, _ref72) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref72;\n    return entry ? yellow(formatFlag(\"entry\")) : undefined;\n  },\n  \"chunk.initial\": (initial, _ref73) => {\n    let {\n      formatFlag,\n      yellow\n    } = _ref73;\n    return initial ? yellow(formatFlag(\"initial\")) : undefined;\n  },\n  \"chunk.rendered\": (rendered, _ref74) => {\n    let {\n      formatFlag,\n      green\n    } = _ref74;\n    return rendered ? green(formatFlag(\"rendered\")) : undefined;\n  },\n  \"chunk.recorded\": (recorded, _ref75) => {\n    let {\n      formatFlag,\n      green\n    } = _ref75;\n    return recorded ? green(formatFlag(\"recorded\")) : undefined;\n  },\n  \"chunk.reason\": (reason, _ref76) => {\n    let {\n      yellow\n    } = _ref76;\n    return reason ? yellow(reason) : undefined;\n  },\n  \"chunk.filteredModules\": filteredModules => filteredModules > 0 ? `${filteredModules} chunk ${plural(filteredModules, \"module\", \"modules\")}` : undefined,\n  \"chunk.separator!\": () => \"\\n\",\n  \"chunkOrigin.request\": request => request,\n  \"chunkOrigin.moduleId\": (moduleId, _ref77) => {\n    let {\n      formatModuleId\n    } = _ref77;\n    return isValidId(moduleId) ? formatModuleId(moduleId) : undefined;\n  },\n  \"chunkOrigin.moduleName\": (moduleName, _ref78) => {\n    let {\n      bold\n    } = _ref78;\n    return bold(moduleName);\n  },\n  \"chunkOrigin.loc\": loc => loc,\n  \"error.compilerPath\": (compilerPath, _ref79) => {\n    let {\n      bold\n    } = _ref79;\n    return compilerPath ? bold(`(${compilerPath})`) : undefined;\n  },\n  \"error.chunkId\": (chunkId, _ref80) => {\n    let {\n      formatChunkId\n    } = _ref80;\n    return isValidId(chunkId) ? formatChunkId(chunkId) : undefined;\n  },\n  \"error.chunkEntry\": (chunkEntry, _ref81) => {\n    let {\n      formatFlag\n    } = _ref81;\n    return chunkEntry ? formatFlag(\"entry\") : undefined;\n  },\n  \"error.chunkInitial\": (chunkInitial, _ref82) => {\n    let {\n      formatFlag\n    } = _ref82;\n    return chunkInitial ? formatFlag(\"initial\") : undefined;\n  },\n  \"error.file\": (file, _ref83) => {\n    let {\n      bold\n    } = _ref83;\n    return bold(file);\n  },\n  \"error.moduleName\": (moduleName, _ref84) => {\n    let {\n      bold\n    } = _ref84;\n    return moduleName.includes(\"!\") ? `${bold(moduleName.replace(/^(\\s|\\S)*!/, \"\"))} (${moduleName})` : `${bold(moduleName)}`;\n  },\n  \"error.loc\": (loc, _ref85) => {\n    let {\n      green\n    } = _ref85;\n    return green(loc);\n  },\n  \"error.message\": (message, _ref86) => {\n    let {\n      bold,\n      formatError\n    } = _ref86;\n    return message.includes(\"\\u001b[\") ? message : bold(formatError(message));\n  },\n  \"error.details\": (details, _ref87) => {\n    let {\n      formatError\n    } = _ref87;\n    return formatError(details);\n  },\n  \"error.stack\": stack => stack,\n  \"error.moduleTrace\": moduleTrace => undefined,\n  \"error.separator!\": () => \"\\n\",\n  \"loggingEntry(error).loggingEntry.message\": (message, _ref88) => {\n    let {\n      red\n    } = _ref88;\n    return mapLines(message, x => `<e> ${red(x)}`);\n  },\n  \"loggingEntry(warn).loggingEntry.message\": (message, _ref89) => {\n    let {\n      yellow\n    } = _ref89;\n    return mapLines(message, x => `<w> ${yellow(x)}`);\n  },\n  \"loggingEntry(info).loggingEntry.message\": (message, _ref90) => {\n    let {\n      green\n    } = _ref90;\n    return mapLines(message, x => `<i> ${green(x)}`);\n  },\n  \"loggingEntry(log).loggingEntry.message\": (message, _ref91) => {\n    let {\n      bold\n    } = _ref91;\n    return mapLines(message, x => `    ${bold(x)}`);\n  },\n  \"loggingEntry(debug).loggingEntry.message\": message => mapLines(message, x => `    ${x}`),\n  \"loggingEntry(trace).loggingEntry.message\": message => mapLines(message, x => `    ${x}`),\n  \"loggingEntry(status).loggingEntry.message\": (message, _ref92) => {\n    let {\n      magenta\n    } = _ref92;\n    return mapLines(message, x => `<s> ${magenta(x)}`);\n  },\n  \"loggingEntry(profile).loggingEntry.message\": (message, _ref93) => {\n    let {\n      magenta\n    } = _ref93;\n    return mapLines(message, x => `<p> ${magenta(x)}`);\n  },\n  \"loggingEntry(profileEnd).loggingEntry.message\": (message, _ref94) => {\n    let {\n      magenta\n    } = _ref94;\n    return mapLines(message, x => `</p> ${magenta(x)}`);\n  },\n  \"loggingEntry(time).loggingEntry.message\": (message, _ref95) => {\n    let {\n      magenta\n    } = _ref95;\n    return mapLines(message, x => `<t> ${magenta(x)}`);\n  },\n  \"loggingEntry(group).loggingEntry.message\": (message, _ref96) => {\n    let {\n      cyan\n    } = _ref96;\n    return mapLines(message, x => `<-> ${cyan(x)}`);\n  },\n  \"loggingEntry(groupCollapsed).loggingEntry.message\": (message, _ref97) => {\n    let {\n      cyan\n    } = _ref97;\n    return mapLines(message, x => `<+> ${cyan(x)}`);\n  },\n  \"loggingEntry(clear).loggingEntry\": () => \"    -------\",\n  \"loggingEntry(groupCollapsed).loggingEntry.children\": () => \"\",\n  \"loggingEntry.trace[]\": trace => trace ? mapLines(trace, x => `| ${x}`) : undefined,\n  \"moduleTraceItem.originName\": originName => originName,\n  loggingGroup: loggingGroup => loggingGroup.entries.length === 0 ? \"\" : undefined,\n  \"loggingGroup.debug\": (flag, _ref98) => {\n    let {\n      red\n    } = _ref98;\n    return flag ? red(\"DEBUG\") : undefined;\n  },\n  \"loggingGroup.name\": (name, _ref99) => {\n    let {\n      bold\n    } = _ref99;\n    return bold(`LOG from ${name}`);\n  },\n  \"loggingGroup.separator!\": () => \"\\n\",\n  \"loggingGroup.filteredEntries\": filteredEntries => filteredEntries > 0 ? `+ ${filteredEntries} hidden lines` : undefined,\n  \"moduleTraceDependency.loc\": loc => loc\n};\n/** @type {Record<string, string | Function>} */\n\nconst ITEM_NAMES = {\n  \"compilation.assets[]\": \"asset\",\n  \"compilation.modules[]\": \"module\",\n  \"compilation.chunks[]\": \"chunk\",\n  \"compilation.entrypoints[]\": \"chunkGroup\",\n  \"compilation.namedChunkGroups[]\": \"chunkGroup\",\n  \"compilation.errors[]\": \"error\",\n  \"compilation.warnings[]\": \"error\",\n  \"compilation.logging[]\": \"loggingGroup\",\n  \"compilation.children[]\": \"compilation\",\n  \"asset.related[]\": \"asset\",\n  \"asset.children[]\": \"asset\",\n  \"asset.chunks[]\": \"assetChunk\",\n  \"asset.auxiliaryChunks[]\": \"assetChunk\",\n  \"asset.chunkNames[]\": \"assetChunkName\",\n  \"asset.chunkIdHints[]\": \"assetChunkIdHint\",\n  \"asset.auxiliaryChunkNames[]\": \"assetChunkName\",\n  \"asset.auxiliaryChunkIdHints[]\": \"assetChunkIdHint\",\n  \"chunkGroup.assets[]\": \"chunkGroupAsset\",\n  \"chunkGroup.auxiliaryAssets[]\": \"chunkGroupAsset\",\n  \"chunkGroupChild.assets[]\": \"chunkGroupAsset\",\n  \"chunkGroupChild.auxiliaryAssets[]\": \"chunkGroupAsset\",\n  \"chunkGroup.children[]\": \"chunkGroupChildGroup\",\n  \"chunkGroupChildGroup.children[]\": \"chunkGroupChild\",\n  \"module.modules[]\": \"module\",\n  \"module.children[]\": \"module\",\n  \"module.reasons[]\": \"moduleReason\",\n  \"moduleReason.children[]\": \"moduleReason\",\n  \"module.issuerPath[]\": \"moduleIssuer\",\n  \"chunk.origins[]\": \"chunkOrigin\",\n  \"chunk.modules[]\": \"module\",\n  \"loggingGroup.entries[]\": logEntry => `loggingEntry(${logEntry.type}).loggingEntry`,\n  \"loggingEntry.children[]\": logEntry => `loggingEntry(${logEntry.type}).loggingEntry`,\n  \"error.moduleTrace[]\": \"moduleTraceItem\",\n  \"moduleTraceItem.dependencies[]\": \"moduleTraceDependency\"\n};\nconst ERROR_PREFERRED_ORDER = [\"compilerPath\", \"chunkId\", \"chunkEntry\", \"chunkInitial\", \"file\", \"separator!\", \"moduleName\", \"loc\", \"separator!\", \"message\", \"separator!\", \"details\", \"separator!\", \"stack\", \"separator!\", \"missing\", \"separator!\", \"moduleTrace\"];\n/** @type {Record<string, string[]>} */\n\nconst PREFERRED_ORDERS = {\n  compilation: [\"name\", \"hash\", \"version\", \"time\", \"builtAt\", \"env\", \"publicPath\", \"assets\", \"filteredAssets\", \"entrypoints\", \"namedChunkGroups\", \"chunks\", \"modules\", \"filteredModules\", \"children\", \"logging\", \"warnings\", \"warningsInChildren!\", \"filteredWarningDetailsCount\", \"errors\", \"errorsInChildren!\", \"filteredErrorDetailsCount\", \"summary!\", \"needAdditionalPass\"],\n  asset: [\"type\", \"name\", \"size\", \"chunks\", \"auxiliaryChunks\", \"emitted\", \"comparedForEmit\", \"cached\", \"info\", \"isOverSizeLimit\", \"chunkNames\", \"auxiliaryChunkNames\", \"chunkIdHints\", \"auxiliaryChunkIdHints\", \"related\", \"filteredRelated\", \"children\", \"filteredChildren\"],\n  \"asset.info\": [\"immutable\", \"sourceFilename\", \"javascriptModule\", \"development\", \"hotModuleReplacement\"],\n  chunkGroup: [\"kind!\", \"name\", \"isOverSizeLimit\", \"assetsSize\", \"auxiliaryAssetsSize\", \"is!\", \"assets\", \"filteredAssets\", \"auxiliaryAssets\", \"filteredAuxiliaryAssets\", \"separator!\", \"children\"],\n  chunkGroupAsset: [\"name\", \"size\"],\n  chunkGroupChildGroup: [\"type\", \"children\"],\n  chunkGroupChild: [\"assets\", \"chunks\", \"name\"],\n  module: [\"type\", \"name\", \"identifier\", \"id\", \"layer\", \"sizes\", \"chunks\", \"depth\", \"cacheable\", \"orphan\", \"runtime\", \"optional\", \"dependent\", \"built\", \"codeGenerated\", \"cached\", \"assets\", \"failed\", \"warnings\", \"errors\", \"children\", \"filteredChildren\", \"providedExports\", \"usedExports\", \"optimizationBailout\", \"reasons\", \"filteredReasons\", \"issuerPath\", \"profile\", \"modules\", \"filteredModules\"],\n  moduleReason: [\"active\", \"type\", \"userRequest\", \"moduleId\", \"module\", \"resolvedModule\", \"loc\", \"explanation\", \"children\", \"filteredChildren\"],\n  \"module.profile\": [\"total\", \"separator!\", \"resolving\", \"restoring\", \"integration\", \"building\", \"storing\", \"additionalResolving\", \"additionalIntegration\"],\n  chunk: [\"id\", \"runtime\", \"files\", \"names\", \"idHints\", \"sizes\", \"parents\", \"siblings\", \"children\", \"childrenByOrder\", \"entry\", \"initial\", \"rendered\", \"recorded\", \"reason\", \"separator!\", \"origins\", \"separator!\", \"modules\", \"separator!\", \"filteredModules\"],\n  chunkOrigin: [\"request\", \"moduleId\", \"moduleName\", \"loc\"],\n  error: ERROR_PREFERRED_ORDER,\n  warning: ERROR_PREFERRED_ORDER,\n  \"chunk.childrenByOrder[]\": [\"type\", \"children\"],\n  loggingGroup: [\"debug\", \"name\", \"separator!\", \"entries\", \"separator!\", \"filteredEntries\"],\n  loggingEntry: [\"message\", \"trace\", \"children\"]\n};\n\nconst itemsJoinOneLine = items => items.filter(Boolean).join(\" \");\n\nconst itemsJoinOneLineBrackets = items => items.length > 0 ? `(${items.filter(Boolean).join(\" \")})` : undefined;\n\nconst itemsJoinMoreSpacing = items => items.filter(Boolean).join(\"\\n\\n\");\n\nconst itemsJoinComma = items => items.filter(Boolean).join(\", \");\n\nconst itemsJoinCommaBrackets = items => items.length > 0 ? `(${items.filter(Boolean).join(\", \")})` : undefined;\n\nconst itemsJoinCommaBracketsWithName = name => items => items.length > 0 ? `(${name}: ${items.filter(Boolean).join(\", \")})` : undefined;\n/** @type {Record<string, (items: string[]) => string>} */\n\n\nconst SIMPLE_ITEMS_JOINER = {\n  \"chunk.parents\": itemsJoinOneLine,\n  \"chunk.siblings\": itemsJoinOneLine,\n  \"chunk.children\": itemsJoinOneLine,\n  \"chunk.names\": itemsJoinCommaBrackets,\n  \"chunk.idHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n  \"chunk.runtime\": itemsJoinCommaBracketsWithName(\"runtime\"),\n  \"chunk.files\": itemsJoinComma,\n  \"chunk.childrenByOrder\": itemsJoinOneLine,\n  \"chunk.childrenByOrder[].children\": itemsJoinOneLine,\n  \"chunkGroup.assets\": itemsJoinOneLine,\n  \"chunkGroup.auxiliaryAssets\": itemsJoinOneLineBrackets,\n  \"chunkGroupChildGroup.children\": itemsJoinComma,\n  \"chunkGroupChild.assets\": itemsJoinOneLine,\n  \"chunkGroupChild.auxiliaryAssets\": itemsJoinOneLineBrackets,\n  \"asset.chunks\": itemsJoinComma,\n  \"asset.auxiliaryChunks\": itemsJoinCommaBrackets,\n  \"asset.chunkNames\": itemsJoinCommaBracketsWithName(\"name\"),\n  \"asset.auxiliaryChunkNames\": itemsJoinCommaBracketsWithName(\"auxiliary name\"),\n  \"asset.chunkIdHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n  \"asset.auxiliaryChunkIdHints\": itemsJoinCommaBracketsWithName(\"auxiliary id hint\"),\n  \"module.chunks\": itemsJoinOneLine,\n  \"module.issuerPath\": items => items.filter(Boolean).map(item => `${item} ->`).join(\" \"),\n  \"compilation.errors\": itemsJoinMoreSpacing,\n  \"compilation.warnings\": itemsJoinMoreSpacing,\n  \"compilation.logging\": itemsJoinMoreSpacing,\n  \"compilation.children\": items => indent(itemsJoinMoreSpacing(items), \"  \"),\n  \"moduleTraceItem.dependencies\": itemsJoinOneLine,\n  \"loggingEntry.children\": items => indent(items.filter(Boolean).join(\"\\n\"), \"  \", false)\n};\n\nconst joinOneLine = items => items.map(item => item.content).filter(Boolean).join(\" \");\n\nconst joinInBrackets = items => {\n  const res = [];\n  let mode = 0;\n\n  for (const item of items) {\n    if (item.element === \"separator!\") {\n      switch (mode) {\n        case 0:\n        case 1:\n          mode += 2;\n          break;\n\n        case 4:\n          res.push(\")\");\n          mode = 3;\n          break;\n      }\n    }\n\n    if (!item.content) continue;\n\n    switch (mode) {\n      case 0:\n        mode = 1;\n        break;\n\n      case 1:\n        res.push(\" \");\n        break;\n\n      case 2:\n        res.push(\"(\");\n        mode = 4;\n        break;\n\n      case 3:\n        res.push(\" (\");\n        mode = 4;\n        break;\n\n      case 4:\n        res.push(\", \");\n        break;\n    }\n\n    res.push(item.content);\n  }\n\n  if (mode === 4) res.push(\")\");\n  return res.join(\"\");\n};\n\nconst indent = (str, prefix, noPrefixInFirstLine) => {\n  const rem = str.replace(/\\n([^\\n])/g, \"\\n\" + prefix + \"$1\");\n  if (noPrefixInFirstLine) return rem;\n  const ind = str[0] === \"\\n\" ? \"\" : prefix;\n  return ind + rem;\n};\n\nconst joinExplicitNewLine = (items, indenter) => {\n  let firstInLine = true;\n  let first = true;\n  return items.map(item => {\n    if (!item || !item.content) return;\n    let content = indent(item.content, first ? \"\" : indenter, !firstInLine);\n\n    if (firstInLine) {\n      content = content.replace(/^\\n+/, \"\");\n    }\n\n    if (!content) return;\n    first = false;\n    const noJoiner = firstInLine || content.startsWith(\"\\n\");\n    firstInLine = content.endsWith(\"\\n\");\n    return noJoiner ? content : \" \" + content;\n  }).filter(Boolean).join(\"\").trim();\n};\n\nconst joinError = error => (items, _ref100) => {\n  let {\n    red,\n    yellow\n  } = _ref100;\n  return `${error ? red(\"ERROR\") : yellow(\"WARNING\")} in ${joinExplicitNewLine(items, \"\")}`;\n};\n/** @type {Record<string, (items: ({ element: string, content: string })[], context: StatsPrinterContext) => string>} */\n\n\nconst SIMPLE_ELEMENT_JOINERS = {\n  compilation: items => {\n    const result = [];\n    let lastNeedMore = false;\n\n    for (const item of items) {\n      if (!item.content) continue;\n      const needMoreSpace = item.element === \"warnings\" || item.element === \"filteredWarningDetailsCount\" || item.element === \"errors\" || item.element === \"filteredErrorDetailsCount\" || item.element === \"logging\";\n\n      if (result.length !== 0) {\n        result.push(needMoreSpace || lastNeedMore ? \"\\n\\n\" : \"\\n\");\n      }\n\n      result.push(item.content);\n      lastNeedMore = needMoreSpace;\n    }\n\n    if (lastNeedMore) result.push(\"\\n\");\n    return result.join(\"\");\n  },\n  asset: items => joinExplicitNewLine(items.map(item => {\n    if ((item.element === \"related\" || item.element === \"children\") && item.content) {\n      return { ...item,\n        content: `\\n${item.content}\\n`\n      };\n    }\n\n    return item;\n  }), \"  \"),\n  \"asset.info\": joinOneLine,\n  module: (items, _ref101) => {\n    let {\n      module\n    } = _ref101;\n    let hasName = false;\n    return joinExplicitNewLine(items.map(item => {\n      switch (item.element) {\n        case \"id\":\n          if (module.id === module.name) {\n            if (hasName) return false;\n            if (item.content) hasName = true;\n          }\n\n          break;\n\n        case \"name\":\n          if (hasName) return false;\n          if (item.content) hasName = true;\n          break;\n\n        case \"providedExports\":\n        case \"usedExports\":\n        case \"optimizationBailout\":\n        case \"reasons\":\n        case \"issuerPath\":\n        case \"profile\":\n        case \"children\":\n        case \"modules\":\n          if (item.content) {\n            return { ...item,\n              content: `\\n${item.content}\\n`\n            };\n          }\n\n          break;\n      }\n\n      return item;\n    }), \"  \");\n  },\n  chunk: items => {\n    let hasEntry = false;\n    return \"chunk \" + joinExplicitNewLine(items.filter(item => {\n      switch (item.element) {\n        case \"entry\":\n          if (item.content) hasEntry = true;\n          break;\n\n        case \"initial\":\n          if (hasEntry) return false;\n          break;\n      }\n\n      return true;\n    }), \"  \");\n  },\n  \"chunk.childrenByOrder[]\": items => `(${joinOneLine(items)})`,\n  chunkGroup: items => joinExplicitNewLine(items, \"  \"),\n  chunkGroupAsset: joinOneLine,\n  chunkGroupChildGroup: joinOneLine,\n  chunkGroupChild: joinOneLine,\n  // moduleReason: (items, { moduleReason }) => {\n  // \tlet hasName = false;\n  // \treturn joinOneLine(\n  // \t\titems.filter(item => {\n  // \t\t\tswitch (item.element) {\n  // \t\t\t\tcase \"moduleId\":\n  // \t\t\t\t\tif (moduleReason.moduleId === moduleReason.module && item.content)\n  // \t\t\t\t\t\thasName = true;\n  // \t\t\t\t\tbreak;\n  // \t\t\t\tcase \"module\":\n  // \t\t\t\t\tif (hasName) return false;\n  // \t\t\t\t\tbreak;\n  // \t\t\t\tcase \"resolvedModule\":\n  // \t\t\t\t\treturn (\n  // \t\t\t\t\t\tmoduleReason.module !== moduleReason.resolvedModule &&\n  // \t\t\t\t\t\titem.content\n  // \t\t\t\t\t);\n  // \t\t\t}\n  // \t\t\treturn true;\n  // \t\t})\n  // \t);\n  // },\n  moduleReason: (items, _ref102) => {\n    let {\n      moduleReason\n    } = _ref102;\n    let hasName = false;\n    return joinExplicitNewLine(items.map(item => {\n      switch (item.element) {\n        case \"moduleId\":\n          if (moduleReason.moduleId === moduleReason.module && item.content) hasName = true;\n          break;\n\n        case \"module\":\n          if (hasName) return false;\n          break;\n\n        case \"resolvedModule\":\n          if (moduleReason.module === moduleReason.resolvedModule) return false;\n          break;\n\n        case \"children\":\n          if (item.content) {\n            return { ...item,\n              content: `\\n${item.content}\\n`\n            };\n          }\n\n          break;\n      }\n\n      return item;\n    }), \"  \");\n  },\n  \"module.profile\": joinInBrackets,\n  moduleIssuer: joinOneLine,\n  chunkOrigin: items => \"> \" + joinOneLine(items),\n  \"errors[].error\": joinError(true),\n  \"warnings[].error\": joinError(false),\n  loggingGroup: items => joinExplicitNewLine(items, \"\").trimRight(),\n  moduleTraceItem: items => \" @ \" + joinOneLine(items),\n  moduleTraceDependency: joinOneLine\n};\nconst AVAILABLE_COLORS = {\n  bold: \"\\u001b[1m\",\n  yellow: \"\\u001b[1m\\u001b[33m\",\n  red: \"\\u001b[1m\\u001b[31m\",\n  green: \"\\u001b[1m\\u001b[32m\",\n  cyan: \"\\u001b[1m\\u001b[36m\",\n  magenta: \"\\u001b[1m\\u001b[35m\"\n};\nconst AVAILABLE_FORMATS = {\n  formatChunkId: (id, _ref103, direction) => {\n    let {\n      yellow\n    } = _ref103;\n\n    switch (direction) {\n      case \"parent\":\n        return `<{${yellow(id)}}>`;\n\n      case \"sibling\":\n        return `={${yellow(id)}}=`;\n\n      case \"child\":\n        return `>{${yellow(id)}}<`;\n\n      default:\n        return `{${yellow(id)}}`;\n    }\n  },\n  formatModuleId: id => `[${id}]`,\n  formatFilename: (filename, _ref104, oversize) => {\n    let {\n      green,\n      yellow\n    } = _ref104;\n    return (oversize ? yellow : green)(filename);\n  },\n  formatFlag: flag => `[${flag}]`,\n  formatLayer: layer => `(in ${layer})`,\n  formatSize: require(\"../SizeFormatHelpers\").formatSize,\n  formatDateTime: (dateTime, _ref105) => {\n    let {\n      bold\n    } = _ref105;\n    const d = new Date(dateTime);\n    const x = twoDigit;\n    const date = `${d.getFullYear()}-${x(d.getMonth() + 1)}-${x(d.getDate())}`;\n    const time = `${x(d.getHours())}:${x(d.getMinutes())}:${x(d.getSeconds())}`;\n    return `${date} ${bold(time)}`;\n  },\n  formatTime: (time, _ref106, boldQuantity) => {\n    let {\n      timeReference,\n      bold,\n      green,\n      yellow,\n      red\n    } = _ref106;\n    const unit = \" ms\";\n\n    if (timeReference && time !== timeReference) {\n      const times = [timeReference / 2, timeReference / 4, timeReference / 8, timeReference / 16];\n      if (time < times[3]) return `${time}${unit}`;else if (time < times[2]) return bold(`${time}${unit}`);else if (time < times[1]) return green(`${time}${unit}`);else if (time < times[0]) return yellow(`${time}${unit}`);else return red(`${time}${unit}`);\n    } else {\n      return `${boldQuantity ? bold(time) : time}${unit}`;\n    }\n  },\n  formatError: (message, _ref107) => {\n    let {\n      green,\n      yellow,\n      red\n    } = _ref107;\n    if (message.includes(\"\\u001b[\")) return message;\n    const highlights = [{\n      regExp: /(Did you mean .+)/g,\n      format: green\n    }, {\n      regExp: /(Set 'mode' option to 'development' or 'production')/g,\n      format: green\n    }, {\n      regExp: /(\\(module has no exports\\))/g,\n      format: red\n    }, {\n      regExp: /\\(possible exports: (.+)\\)/g,\n      format: green\n    }, {\n      regExp: /(?:^|\\n)(.* doesn't exist)/g,\n      format: red\n    }, {\n      regExp: /('\\w+' option has not been set)/g,\n      format: red\n    }, {\n      regExp: /(Emitted value instead of an instance of Error)/g,\n      format: yellow\n    }, {\n      regExp: /(Used? .+ instead)/gi,\n      format: yellow\n    }, {\n      regExp: /\\b(deprecated|must|required)\\b/g,\n      format: yellow\n    }, {\n      regExp: /\\b(BREAKING CHANGE)\\b/gi,\n      format: red\n    }, {\n      regExp: /\\b(error|failed|unexpected|invalid|not found|not supported|not available|not possible|not implemented|doesn't support|conflict|conflicting|not existing|duplicate)\\b/gi,\n      format: red\n    }];\n\n    for (const {\n      regExp,\n      format\n    } of highlights) {\n      message = message.replace(regExp, (match, content) => {\n        return match.replace(content, format(content));\n      });\n    }\n\n    return message;\n  }\n};\nconst RESULT_MODIFIER = {\n  \"module.modules\": result => {\n    return indent(result, \"| \");\n  }\n};\n\nconst createOrder = (array, preferredOrder) => {\n  const originalArray = array.slice();\n  const set = new Set(array);\n  const usedSet = new Set();\n  array.length = 0;\n\n  for (const element of preferredOrder) {\n    if (element.endsWith(\"!\") || set.has(element)) {\n      array.push(element);\n      usedSet.add(element);\n    }\n  }\n\n  for (const element of originalArray) {\n    if (!usedSet.has(element)) {\n      array.push(element);\n    }\n  }\n\n  return array;\n};\n\nclass DefaultStatsPrinterPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(\"DefaultStatsPrinterPlugin\", compilation => {\n      compilation.hooks.statsPrinter.tap(\"DefaultStatsPrinterPlugin\", (stats, options, context) => {\n        // Put colors into context\n        stats.hooks.print.for(\"compilation\").tap(\"DefaultStatsPrinterPlugin\", (compilation, context) => {\n          for (const color of Object.keys(AVAILABLE_COLORS)) {\n            let start;\n\n            if (options.colors) {\n              if (typeof options.colors === \"object\" && typeof options.colors[color] === \"string\") {\n                start = options.colors[color];\n              } else {\n                start = AVAILABLE_COLORS[color];\n              }\n            }\n\n            if (start) {\n              context[color] = str => `${start}${typeof str === \"string\" ? str.replace(/((\\u001b\\[39m|\\u001b\\[22m|\\u001b\\[0m)+)/g, `$1${start}`) : str}\\u001b[39m\\u001b[22m`;\n            } else {\n              context[color] = str => str;\n            }\n          }\n\n          for (const format of Object.keys(AVAILABLE_FORMATS)) {\n            context[format] = function (content) {\n              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n              }\n\n              return AVAILABLE_FORMATS[format](content, context, ...args);\n            };\n          }\n\n          context.timeReference = compilation.time;\n        });\n\n        for (const key of Object.keys(SIMPLE_PRINTERS)) {\n          stats.hooks.print.for(key).tap(\"DefaultStatsPrinterPlugin\", (obj, ctx) => SIMPLE_PRINTERS[key](obj, ctx, stats));\n        }\n\n        for (const key of Object.keys(PREFERRED_ORDERS)) {\n          const preferredOrder = PREFERRED_ORDERS[key];\n          stats.hooks.sortElements.for(key).tap(\"DefaultStatsPrinterPlugin\", (elements, context) => {\n            createOrder(elements, preferredOrder);\n          });\n        }\n\n        for (const key of Object.keys(ITEM_NAMES)) {\n          const itemName = ITEM_NAMES[key];\n          stats.hooks.getItemName.for(key).tap(\"DefaultStatsPrinterPlugin\", typeof itemName === \"string\" ? () => itemName : itemName);\n        }\n\n        for (const key of Object.keys(SIMPLE_ITEMS_JOINER)) {\n          const joiner = SIMPLE_ITEMS_JOINER[key];\n          stats.hooks.printItems.for(key).tap(\"DefaultStatsPrinterPlugin\", joiner);\n        }\n\n        for (const key of Object.keys(SIMPLE_ELEMENT_JOINERS)) {\n          const joiner = SIMPLE_ELEMENT_JOINERS[key];\n          stats.hooks.printElements.for(key).tap(\"DefaultStatsPrinterPlugin\", joiner);\n        }\n\n        for (const key of Object.keys(RESULT_MODIFIER)) {\n          const modifier = RESULT_MODIFIER[key];\n          stats.hooks.result.for(key).tap(\"DefaultStatsPrinterPlugin\", modifier);\n        }\n      });\n    });\n  }\n\n}\n\nmodule.exports = DefaultStatsPrinterPlugin;","map":{"version":3,"sources":["E:/Coding/fixl solution/work1/addtocart/node_modules/webpack/lib/stats/DefaultStatsPrinterPlugin.js"],"names":["plural","n","singular","printSizes","sizes","formatSize","keys","Object","length","map","key","join","mapLines","str","fn","split","twoDigit","isValidId","id","SIMPLE_PRINTERS","_","type","bold","green","red","yellow","formatDateTime","formatTime","compilation","name","hash","version","time","builtAt","errorsCount","warningsCount","root","warningsMessage","errorsMessage","timeMessage","hashMessage","builtAtMessage","versionMessage","nameMessage","subjectMessage","statusMessage","count","undefined","env","JSON","stringify","publicPath","entrypoints","context","printer","Array","isArray","print","values","chunkGroupKind","namedChunkGroups","chunkGroups","filter","group","prototype","hasOwnProperty","call","filteredModules","filteredAssets","assets","logging","entries","value","children","warnings","childWarnings","errors","childErrors","formatFilename","asset","isOverSizeLimit","size","emitted","formatFlag","comparedForEmit","cached","immutable","javascriptModule","sourceFilename","development","hotModuleReplacement","filteredRelated","related","filteredChildren","assetChunk","formatChunkId","assetChunkName","assetChunkIdHint","formatModuleId","prefix","resource","exec","identifier","layer","formatLayer","depth","cacheable","orphan","runtime","optional","dependent","cyan","built","codeGenerated","buildTimeExecuted","magenta","providedExports","usedExports","module","providedExportsCount","optimizationBailout","issuerPath","profile","filteredReasons","userRequest","moduleId","loc","explanation","active","chunkGroup","auxiliaryAssets","file","parents","siblings","childrenByOrder","entry","initial","rendered","recorded","reason","request","moduleName","compilerPath","chunkId","chunkEntry","chunkInitial","includes","replace","message","formatError","details","stack","moduleTrace","x","trace","originName","loggingGroup","flag","filteredEntries","ITEM_NAMES","logEntry","ERROR_PREFERRED_ORDER","PREFERRED_ORDERS","chunkGroupAsset","chunkGroupChildGroup","chunkGroupChild","moduleReason","chunk","chunkOrigin","error","warning","loggingEntry","itemsJoinOneLine","items","Boolean","itemsJoinOneLineBrackets","itemsJoinMoreSpacing","itemsJoinComma","itemsJoinCommaBrackets","itemsJoinCommaBracketsWithName","SIMPLE_ITEMS_JOINER","item","indent","joinOneLine","content","joinInBrackets","res","mode","element","push","noPrefixInFirstLine","rem","ind","joinExplicitNewLine","indenter","firstInLine","first","noJoiner","startsWith","endsWith","trim","joinError","SIMPLE_ELEMENT_JOINERS","result","lastNeedMore","needMoreSpace","hasName","hasEntry","resolvedModule","moduleIssuer","trimRight","moduleTraceItem","moduleTraceDependency","AVAILABLE_COLORS","AVAILABLE_FORMATS","direction","filename","oversize","require","dateTime","d","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","boldQuantity","timeReference","unit","times","highlights","regExp","format","match","RESULT_MODIFIER","createOrder","array","preferredOrder","originalArray","slice","set","Set","usedSet","has","add","DefaultStatsPrinterPlugin","apply","compiler","hooks","tap","statsPrinter","stats","options","for","color","start","colors","args","obj","ctx","sortElements","elements","itemName","getItemName","joiner","printItems","printElements","modifier","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"./StatsPrinter\")} StatsPrinter */\n/** @typedef {import(\"./StatsPrinter\").StatsPrinterContext} StatsPrinterContext */\n\nconst plural = (n, singular, plural) => (n === 1 ? singular : plural);\n\n/**\n * @param {Record<string, number>} sizes sizes by source type\n * @param {Object} options options\n * @param {(number) => string=} options.formatSize size formatter\n * @returns {string} text\n */\nconst printSizes = (sizes, { formatSize = n => `${n}` }) => {\n\tconst keys = Object.keys(sizes);\n\tif (keys.length > 1) {\n\t\treturn keys.map(key => `${formatSize(sizes[key])} (${key})`).join(\" \");\n\t} else if (keys.length === 1) {\n\t\treturn formatSize(sizes[keys[0]]);\n\t}\n};\n\nconst mapLines = (str, fn) => str.split(\"\\n\").map(fn).join(\"\\n\");\n\n/**\n * @param {number} n a number\n * @returns {string} number as two digit string, leading 0\n */\nconst twoDigit = n => (n >= 10 ? `${n}` : `0${n}`);\n\nconst isValidId = id => {\n\treturn typeof id === \"number\" || id;\n};\n\n/** @type {Record<string, (thing: any, context: StatsPrinterContext, printer: StatsPrinter) => string | void>} */\nconst SIMPLE_PRINTERS = {\n\t\"compilation.summary!\": (\n\t\t_,\n\t\t{\n\t\t\ttype,\n\t\t\tbold,\n\t\t\tgreen,\n\t\t\tred,\n\t\t\tyellow,\n\t\t\tformatDateTime,\n\t\t\tformatTime,\n\t\t\tcompilation: {\n\t\t\t\tname,\n\t\t\t\thash,\n\t\t\t\tversion,\n\t\t\t\ttime,\n\t\t\t\tbuiltAt,\n\t\t\t\terrorsCount,\n\t\t\t\twarningsCount\n\t\t\t}\n\t\t}\n\t) => {\n\t\tconst root = type === \"compilation.summary!\";\n\t\tconst warningsMessage =\n\t\t\twarningsCount > 0\n\t\t\t\t? yellow(\n\t\t\t\t\t\t`${warningsCount} ${plural(warningsCount, \"warning\", \"warnings\")}`\n\t\t\t\t  )\n\t\t\t\t: \"\";\n\t\tconst errorsMessage =\n\t\t\terrorsCount > 0\n\t\t\t\t? red(`${errorsCount} ${plural(errorsCount, \"error\", \"errors\")}`)\n\t\t\t\t: \"\";\n\t\tconst timeMessage = root && time ? ` in ${formatTime(time)}` : \"\";\n\t\tconst hashMessage = hash ? ` (${hash})` : \"\";\n\t\tconst builtAtMessage =\n\t\t\troot && builtAt ? `${formatDateTime(builtAt)}: ` : \"\";\n\t\tconst versionMessage = root && version ? `webpack ${version}` : \"\";\n\t\tconst nameMessage =\n\t\t\troot && name\n\t\t\t\t? bold(name)\n\t\t\t\t: name\n\t\t\t\t? `Child ${bold(name)}`\n\t\t\t\t: root\n\t\t\t\t? \"\"\n\t\t\t\t: \"Child\";\n\t\tconst subjectMessage =\n\t\t\tnameMessage && versionMessage\n\t\t\t\t? `${nameMessage} (${versionMessage})`\n\t\t\t\t: versionMessage || nameMessage || \"webpack\";\n\t\tlet statusMessage;\n\t\tif (errorsMessage && warningsMessage) {\n\t\t\tstatusMessage = `compiled with ${errorsMessage} and ${warningsMessage}`;\n\t\t} else if (errorsMessage) {\n\t\t\tstatusMessage = `compiled with ${errorsMessage}`;\n\t\t} else if (warningsMessage) {\n\t\t\tstatusMessage = `compiled with ${warningsMessage}`;\n\t\t} else if (errorsCount === 0 && warningsCount === 0) {\n\t\t\tstatusMessage = `compiled ${green(\"successfully\")}`;\n\t\t} else {\n\t\t\tstatusMessage = `compiled`;\n\t\t}\n\t\tif (\n\t\t\tbuiltAtMessage ||\n\t\t\tversionMessage ||\n\t\t\terrorsMessage ||\n\t\t\twarningsMessage ||\n\t\t\t(errorsCount === 0 && warningsCount === 0) ||\n\t\t\ttimeMessage ||\n\t\t\thashMessage\n\t\t)\n\t\t\treturn `${builtAtMessage}${subjectMessage} ${statusMessage}${timeMessage}${hashMessage}`;\n\t},\n\t\"compilation.filteredWarningDetailsCount\": count =>\n\t\tcount\n\t\t\t? `${count} ${plural(\n\t\t\t\t\tcount,\n\t\t\t\t\t\"warning has\",\n\t\t\t\t\t\"warnings have\"\n\t\t\t  )} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.`\n\t\t\t: undefined,\n\t\"compilation.filteredErrorDetailsCount\": (count, { yellow }) =>\n\t\tcount\n\t\t\t? yellow(\n\t\t\t\t\t`${count} ${plural(\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\t\"error has\",\n\t\t\t\t\t\t\"errors have\"\n\t\t\t\t\t)} detailed information that is not shown.\\nUse 'stats.errorDetails: true' resp. '--stats-error-details' to show it.`\n\t\t\t  )\n\t\t\t: undefined,\n\t\"compilation.env\": (env, { bold }) =>\n\t\tenv\n\t\t\t? `Environment (--env): ${bold(JSON.stringify(env, null, 2))}`\n\t\t\t: undefined,\n\t\"compilation.publicPath\": (publicPath, { bold }) =>\n\t\t`PublicPath: ${bold(publicPath || \"(none)\")}`,\n\t\"compilation.entrypoints\": (entrypoints, context, printer) =>\n\t\tArray.isArray(entrypoints)\n\t\t\t? undefined\n\t\t\t: printer.print(context.type, Object.values(entrypoints), {\n\t\t\t\t\t...context,\n\t\t\t\t\tchunkGroupKind: \"Entrypoint\"\n\t\t\t  }),\n\t\"compilation.namedChunkGroups\": (namedChunkGroups, context, printer) => {\n\t\tif (!Array.isArray(namedChunkGroups)) {\n\t\t\tconst {\n\t\t\t\tcompilation: { entrypoints }\n\t\t\t} = context;\n\t\t\tlet chunkGroups = Object.values(namedChunkGroups);\n\t\t\tif (entrypoints) {\n\t\t\t\tchunkGroups = chunkGroups.filter(\n\t\t\t\t\tgroup =>\n\t\t\t\t\t\t!Object.prototype.hasOwnProperty.call(entrypoints, group.name)\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn printer.print(context.type, chunkGroups, {\n\t\t\t\t...context,\n\t\t\t\tchunkGroupKind: \"Chunk Group\"\n\t\t\t});\n\t\t}\n\t},\n\t\"compilation.assetsByChunkName\": () => \"\",\n\n\t\"compilation.filteredModules\": filteredModules =>\n\t\tfilteredModules > 0\n\t\t\t? `${filteredModules} ${plural(filteredModules, \"module\", \"modules\")}`\n\t\t\t: undefined,\n\t\"compilation.filteredAssets\": (filteredAssets, { compilation: { assets } }) =>\n\t\tfilteredAssets > 0\n\t\t\t? `${filteredAssets} ${plural(filteredAssets, \"asset\", \"assets\")}`\n\t\t\t: undefined,\n\t\"compilation.logging\": (logging, context, printer) =>\n\t\tArray.isArray(logging)\n\t\t\t? undefined\n\t\t\t: printer.print(\n\t\t\t\t\tcontext.type,\n\t\t\t\t\tObject.entries(logging).map(([name, value]) => ({ ...value, name })),\n\t\t\t\t\tcontext\n\t\t\t  ),\n\t\"compilation.warningsInChildren!\": (_, { yellow, compilation }) => {\n\t\tif (\n\t\t\t!compilation.children &&\n\t\t\tcompilation.warningsCount > 0 &&\n\t\t\tcompilation.warnings\n\t\t) {\n\t\t\tconst childWarnings =\n\t\t\t\tcompilation.warningsCount - compilation.warnings.length;\n\t\t\tif (childWarnings > 0) {\n\t\t\t\treturn yellow(\n\t\t\t\t\t`${childWarnings} ${plural(\n\t\t\t\t\t\tchildWarnings,\n\t\t\t\t\t\t\"WARNING\",\n\t\t\t\t\t\t\"WARNINGS\"\n\t\t\t\t\t)} in child compilations${\n\t\t\t\t\t\tcompilation.children\n\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t: \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"\n\t\t\t\t\t}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\t\"compilation.errorsInChildren!\": (_, { red, compilation }) => {\n\t\tif (\n\t\t\t!compilation.children &&\n\t\t\tcompilation.errorsCount > 0 &&\n\t\t\tcompilation.errors\n\t\t) {\n\t\t\tconst childErrors = compilation.errorsCount - compilation.errors.length;\n\t\t\tif (childErrors > 0) {\n\t\t\t\treturn red(\n\t\t\t\t\t`${childErrors} ${plural(\n\t\t\t\t\t\tchildErrors,\n\t\t\t\t\t\t\"ERROR\",\n\t\t\t\t\t\t\"ERRORS\"\n\t\t\t\t\t)} in child compilations${\n\t\t\t\t\t\tcompilation.children\n\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t: \" (Use 'stats.children: true' resp. '--stats-children' for more details)\"\n\t\t\t\t\t}`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\n\t\"asset.type\": type => type,\n\t\"asset.name\": (name, { formatFilename, asset: { isOverSizeLimit } }) =>\n\t\tformatFilename(name, isOverSizeLimit),\n\t\"asset.size\": (\n\t\tsize,\n\t\t{ asset: { isOverSizeLimit }, yellow, green, formatSize }\n\t) => (isOverSizeLimit ? yellow(formatSize(size)) : formatSize(size)),\n\t\"asset.emitted\": (emitted, { green, formatFlag }) =>\n\t\temitted ? green(formatFlag(\"emitted\")) : undefined,\n\t\"asset.comparedForEmit\": (comparedForEmit, { yellow, formatFlag }) =>\n\t\tcomparedForEmit ? yellow(formatFlag(\"compared for emit\")) : undefined,\n\t\"asset.cached\": (cached, { green, formatFlag }) =>\n\t\tcached ? green(formatFlag(\"cached\")) : undefined,\n\t\"asset.isOverSizeLimit\": (isOverSizeLimit, { yellow, formatFlag }) =>\n\t\tisOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined,\n\n\t\"asset.info.immutable\": (immutable, { green, formatFlag }) =>\n\t\timmutable ? green(formatFlag(\"immutable\")) : undefined,\n\t\"asset.info.javascriptModule\": (javascriptModule, { formatFlag }) =>\n\t\tjavascriptModule ? formatFlag(\"javascript module\") : undefined,\n\t\"asset.info.sourceFilename\": (sourceFilename, { formatFlag }) =>\n\t\tsourceFilename\n\t\t\t? formatFlag(\n\t\t\t\t\tsourceFilename === true\n\t\t\t\t\t\t? \"from source file\"\n\t\t\t\t\t\t: `from: ${sourceFilename}`\n\t\t\t  )\n\t\t\t: undefined,\n\t\"asset.info.development\": (development, { green, formatFlag }) =>\n\t\tdevelopment ? green(formatFlag(\"dev\")) : undefined,\n\t\"asset.info.hotModuleReplacement\": (\n\t\thotModuleReplacement,\n\t\t{ green, formatFlag }\n\t) => (hotModuleReplacement ? green(formatFlag(\"hmr\")) : undefined),\n\t\"asset.separator!\": () => \"\\n\",\n\t\"asset.filteredRelated\": (filteredRelated, { asset: { related } }) =>\n\t\tfilteredRelated > 0\n\t\t\t? `${filteredRelated} related ${plural(\n\t\t\t\t\tfilteredRelated,\n\t\t\t\t\t\"asset\",\n\t\t\t\t\t\"assets\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"asset.filteredChildren\": filteredChildren =>\n\t\tfilteredChildren > 0\n\t\t\t? `${filteredChildren} ${plural(filteredChildren, \"asset\", \"assets\")}`\n\t\t\t: undefined,\n\n\tassetChunk: (id, { formatChunkId }) => formatChunkId(id),\n\n\tassetChunkName: name => name,\n\tassetChunkIdHint: name => name,\n\n\t\"module.type\": type => (type !== \"module\" ? type : undefined),\n\t\"module.id\": (id, { formatModuleId }) =>\n\t\tisValidId(id) ? formatModuleId(id) : undefined,\n\t\"module.name\": (name, { bold }) => {\n\t\tconst [, prefix, resource] = /^(.*!)?([^!]*)$/.exec(name);\n\t\treturn (prefix || \"\") + bold(resource);\n\t},\n\t\"module.identifier\": identifier => undefined,\n\t\"module.layer\": (layer, { formatLayer }) =>\n\t\tlayer ? formatLayer(layer) : undefined,\n\t\"module.sizes\": printSizes,\n\t\"module.chunks[]\": (id, { formatChunkId }) => formatChunkId(id),\n\t\"module.depth\": (depth, { formatFlag }) =>\n\t\tdepth !== null ? formatFlag(`depth ${depth}`) : undefined,\n\t\"module.cacheable\": (cacheable, { formatFlag, red }) =>\n\t\tcacheable === false ? red(formatFlag(\"not cacheable\")) : undefined,\n\t\"module.orphan\": (orphan, { formatFlag, yellow }) =>\n\t\torphan ? yellow(formatFlag(\"orphan\")) : undefined,\n\t\"module.runtime\": (runtime, { formatFlag, yellow }) =>\n\t\truntime ? yellow(formatFlag(\"runtime\")) : undefined,\n\t\"module.optional\": (optional, { formatFlag, yellow }) =>\n\t\toptional ? yellow(formatFlag(\"optional\")) : undefined,\n\t\"module.dependent\": (dependent, { formatFlag, cyan }) =>\n\t\tdependent ? cyan(formatFlag(\"dependent\")) : undefined,\n\t\"module.built\": (built, { formatFlag, yellow }) =>\n\t\tbuilt ? yellow(formatFlag(\"built\")) : undefined,\n\t\"module.codeGenerated\": (codeGenerated, { formatFlag, yellow }) =>\n\t\tcodeGenerated ? yellow(formatFlag(\"code generated\")) : undefined,\n\t\"module.buildTimeExecuted\": (buildTimeExecuted, { formatFlag, green }) =>\n\t\tbuildTimeExecuted ? green(formatFlag(\"build time executed\")) : undefined,\n\t\"module.cached\": (cached, { formatFlag, green }) =>\n\t\tcached ? green(formatFlag(\"cached\")) : undefined,\n\t\"module.assets\": (assets, { formatFlag, magenta }) =>\n\t\tassets && assets.length\n\t\t\t? magenta(\n\t\t\t\t\tformatFlag(\n\t\t\t\t\t\t`${assets.length} ${plural(assets.length, \"asset\", \"assets\")}`\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: undefined,\n\t\"module.warnings\": (warnings, { formatFlag, yellow }) =>\n\t\twarnings === true\n\t\t\t? yellow(formatFlag(\"warnings\"))\n\t\t\t: warnings\n\t\t\t? yellow(\n\t\t\t\t\tformatFlag(`${warnings} ${plural(warnings, \"warning\", \"warnings\")}`)\n\t\t\t  )\n\t\t\t: undefined,\n\t\"module.errors\": (errors, { formatFlag, red }) =>\n\t\terrors === true\n\t\t\t? red(formatFlag(\"errors\"))\n\t\t\t: errors\n\t\t\t? red(formatFlag(`${errors} ${plural(errors, \"error\", \"errors\")}`))\n\t\t\t: undefined,\n\t\"module.providedExports\": (providedExports, { formatFlag, cyan }) => {\n\t\tif (Array.isArray(providedExports)) {\n\t\t\tif (providedExports.length === 0) return cyan(formatFlag(\"no exports\"));\n\t\t\treturn cyan(formatFlag(`exports: ${providedExports.join(\", \")}`));\n\t\t}\n\t},\n\t\"module.usedExports\": (usedExports, { formatFlag, cyan, module }) => {\n\t\tif (usedExports !== true) {\n\t\t\tif (usedExports === null) return cyan(formatFlag(\"used exports unknown\"));\n\t\t\tif (usedExports === false) return cyan(formatFlag(\"module unused\"));\n\t\t\tif (Array.isArray(usedExports)) {\n\t\t\t\tif (usedExports.length === 0)\n\t\t\t\t\treturn cyan(formatFlag(\"no exports used\"));\n\t\t\t\tconst providedExportsCount = Array.isArray(module.providedExports)\n\t\t\t\t\t? module.providedExports.length\n\t\t\t\t\t: null;\n\t\t\t\tif (\n\t\t\t\t\tprovidedExportsCount !== null &&\n\t\t\t\t\tprovidedExportsCount === usedExports.length\n\t\t\t\t) {\n\t\t\t\t\treturn cyan(formatFlag(\"all exports used\"));\n\t\t\t\t} else {\n\t\t\t\t\treturn cyan(\n\t\t\t\t\t\tformatFlag(`only some exports used: ${usedExports.join(\", \")}`)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"module.optimizationBailout[]\": (optimizationBailout, { yellow }) =>\n\t\tyellow(optimizationBailout),\n\t\"module.issuerPath\": (issuerPath, { module }) =>\n\t\tmodule.profile ? undefined : \"\",\n\t\"module.profile\": profile => undefined,\n\t\"module.filteredModules\": filteredModules =>\n\t\tfilteredModules > 0\n\t\t\t? `${filteredModules} nested ${plural(\n\t\t\t\t\tfilteredModules,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"module.filteredReasons\": filteredReasons =>\n\t\tfilteredReasons > 0\n\t\t\t? `${filteredReasons} ${plural(filteredReasons, \"reason\", \"reasons\")}`\n\t\t\t: undefined,\n\t\"module.filteredChildren\": filteredChildren =>\n\t\tfilteredChildren > 0\n\t\t\t? `${filteredChildren} ${plural(filteredChildren, \"module\", \"modules\")}`\n\t\t\t: undefined,\n\t\"module.separator!\": () => \"\\n\",\n\n\t\"moduleIssuer.id\": (id, { formatModuleId }) => formatModuleId(id),\n\t\"moduleIssuer.profile.total\": (value, { formatTime }) => formatTime(value),\n\n\t\"moduleReason.type\": type => type,\n\t\"moduleReason.userRequest\": (userRequest, { cyan }) => cyan(userRequest),\n\t\"moduleReason.moduleId\": (moduleId, { formatModuleId }) =>\n\t\tisValidId(moduleId) ? formatModuleId(moduleId) : undefined,\n\t\"moduleReason.module\": (module, { magenta }) => magenta(module),\n\t\"moduleReason.loc\": loc => loc,\n\t\"moduleReason.explanation\": (explanation, { cyan }) => cyan(explanation),\n\t\"moduleReason.active\": (active, { formatFlag }) =>\n\t\tactive ? undefined : formatFlag(\"inactive\"),\n\t\"moduleReason.resolvedModule\": (module, { magenta }) => magenta(module),\n\t\"moduleReason.filteredChildren\": filteredChildren =>\n\t\tfilteredChildren > 0\n\t\t\t? `${filteredChildren} ${plural(filteredChildren, \"reason\", \"reasons\")}`\n\t\t\t: undefined,\n\n\t\"module.profile.total\": (value, { formatTime }) => formatTime(value),\n\t\"module.profile.resolving\": (value, { formatTime }) =>\n\t\t`resolving: ${formatTime(value)}`,\n\t\"module.profile.restoring\": (value, { formatTime }) =>\n\t\t`restoring: ${formatTime(value)}`,\n\t\"module.profile.integration\": (value, { formatTime }) =>\n\t\t`integration: ${formatTime(value)}`,\n\t\"module.profile.building\": (value, { formatTime }) =>\n\t\t`building: ${formatTime(value)}`,\n\t\"module.profile.storing\": (value, { formatTime }) =>\n\t\t`storing: ${formatTime(value)}`,\n\t\"module.profile.additionalResolving\": (value, { formatTime }) =>\n\t\tvalue ? `additional resolving: ${formatTime(value)}` : undefined,\n\t\"module.profile.additionalIntegration\": (value, { formatTime }) =>\n\t\tvalue ? `additional integration: ${formatTime(value)}` : undefined,\n\n\t\"chunkGroup.kind!\": (_, { chunkGroupKind }) => chunkGroupKind,\n\t\"chunkGroup.separator!\": () => \"\\n\",\n\t\"chunkGroup.name\": (name, { bold }) => bold(name),\n\t\"chunkGroup.isOverSizeLimit\": (isOverSizeLimit, { formatFlag, yellow }) =>\n\t\tisOverSizeLimit ? yellow(formatFlag(\"big\")) : undefined,\n\t\"chunkGroup.assetsSize\": (size, { formatSize }) =>\n\t\tsize ? formatSize(size) : undefined,\n\t\"chunkGroup.auxiliaryAssetsSize\": (size, { formatSize }) =>\n\t\tsize ? `(${formatSize(size)})` : undefined,\n\t\"chunkGroup.filteredAssets\": n =>\n\t\tn > 0 ? `${n} ${plural(n, \"asset\", \"assets\")}` : undefined,\n\t\"chunkGroup.filteredAuxiliaryAssets\": n =>\n\t\tn > 0 ? `${n} auxiliary ${plural(n, \"asset\", \"assets\")}` : undefined,\n\t\"chunkGroup.is!\": () => \"=\",\n\t\"chunkGroupAsset.name\": (asset, { green }) => green(asset),\n\t\"chunkGroupAsset.size\": (size, { formatSize, chunkGroup }) =>\n\t\tchunkGroup.assets.length > 1 ||\n\t\t(chunkGroup.auxiliaryAssets && chunkGroup.auxiliaryAssets.length > 0)\n\t\t\t? formatSize(size)\n\t\t\t: undefined,\n\t\"chunkGroup.children\": (children, context, printer) =>\n\t\tArray.isArray(children)\n\t\t\t? undefined\n\t\t\t: printer.print(\n\t\t\t\t\tcontext.type,\n\t\t\t\t\tObject.keys(children).map(key => ({\n\t\t\t\t\t\ttype: key,\n\t\t\t\t\t\tchildren: children[key]\n\t\t\t\t\t})),\n\t\t\t\t\tcontext\n\t\t\t  ),\n\t\"chunkGroupChildGroup.type\": type => `${type}:`,\n\t\"chunkGroupChild.assets[]\": (file, { formatFilename }) =>\n\t\tformatFilename(file),\n\t\"chunkGroupChild.chunks[]\": (id, { formatChunkId }) => formatChunkId(id),\n\t\"chunkGroupChild.name\": name => (name ? `(name: ${name})` : undefined),\n\n\t\"chunk.id\": (id, { formatChunkId }) => formatChunkId(id),\n\t\"chunk.files[]\": (file, { formatFilename }) => formatFilename(file),\n\t\"chunk.names[]\": name => name,\n\t\"chunk.idHints[]\": name => name,\n\t\"chunk.runtime[]\": name => name,\n\t\"chunk.sizes\": (sizes, context) => printSizes(sizes, context),\n\t\"chunk.parents[]\": (parents, context) =>\n\t\tcontext.formatChunkId(parents, \"parent\"),\n\t\"chunk.siblings[]\": (siblings, context) =>\n\t\tcontext.formatChunkId(siblings, \"sibling\"),\n\t\"chunk.children[]\": (children, context) =>\n\t\tcontext.formatChunkId(children, \"child\"),\n\t\"chunk.childrenByOrder\": (childrenByOrder, context, printer) =>\n\t\tArray.isArray(childrenByOrder)\n\t\t\t? undefined\n\t\t\t: printer.print(\n\t\t\t\t\tcontext.type,\n\t\t\t\t\tObject.keys(childrenByOrder).map(key => ({\n\t\t\t\t\t\ttype: key,\n\t\t\t\t\t\tchildren: childrenByOrder[key]\n\t\t\t\t\t})),\n\t\t\t\t\tcontext\n\t\t\t  ),\n\t\"chunk.childrenByOrder[].type\": type => `${type}:`,\n\t\"chunk.childrenByOrder[].children[]\": (id, { formatChunkId }) =>\n\t\tisValidId(id) ? formatChunkId(id) : undefined,\n\t\"chunk.entry\": (entry, { formatFlag, yellow }) =>\n\t\tentry ? yellow(formatFlag(\"entry\")) : undefined,\n\t\"chunk.initial\": (initial, { formatFlag, yellow }) =>\n\t\tinitial ? yellow(formatFlag(\"initial\")) : undefined,\n\t\"chunk.rendered\": (rendered, { formatFlag, green }) =>\n\t\trendered ? green(formatFlag(\"rendered\")) : undefined,\n\t\"chunk.recorded\": (recorded, { formatFlag, green }) =>\n\t\trecorded ? green(formatFlag(\"recorded\")) : undefined,\n\t\"chunk.reason\": (reason, { yellow }) => (reason ? yellow(reason) : undefined),\n\t\"chunk.filteredModules\": filteredModules =>\n\t\tfilteredModules > 0\n\t\t\t? `${filteredModules} chunk ${plural(\n\t\t\t\t\tfilteredModules,\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"modules\"\n\t\t\t  )}`\n\t\t\t: undefined,\n\t\"chunk.separator!\": () => \"\\n\",\n\n\t\"chunkOrigin.request\": request => request,\n\t\"chunkOrigin.moduleId\": (moduleId, { formatModuleId }) =>\n\t\tisValidId(moduleId) ? formatModuleId(moduleId) : undefined,\n\t\"chunkOrigin.moduleName\": (moduleName, { bold }) => bold(moduleName),\n\t\"chunkOrigin.loc\": loc => loc,\n\n\t\"error.compilerPath\": (compilerPath, { bold }) =>\n\t\tcompilerPath ? bold(`(${compilerPath})`) : undefined,\n\t\"error.chunkId\": (chunkId, { formatChunkId }) =>\n\t\tisValidId(chunkId) ? formatChunkId(chunkId) : undefined,\n\t\"error.chunkEntry\": (chunkEntry, { formatFlag }) =>\n\t\tchunkEntry ? formatFlag(\"entry\") : undefined,\n\t\"error.chunkInitial\": (chunkInitial, { formatFlag }) =>\n\t\tchunkInitial ? formatFlag(\"initial\") : undefined,\n\t\"error.file\": (file, { bold }) => bold(file),\n\t\"error.moduleName\": (moduleName, { bold }) => {\n\t\treturn moduleName.includes(\"!\")\n\t\t\t? `${bold(moduleName.replace(/^(\\s|\\S)*!/, \"\"))} (${moduleName})`\n\t\t\t: `${bold(moduleName)}`;\n\t},\n\t\"error.loc\": (loc, { green }) => green(loc),\n\t\"error.message\": (message, { bold, formatError }) =>\n\t\tmessage.includes(\"\\u001b[\") ? message : bold(formatError(message)),\n\t\"error.details\": (details, { formatError }) => formatError(details),\n\t\"error.stack\": stack => stack,\n\t\"error.moduleTrace\": moduleTrace => undefined,\n\t\"error.separator!\": () => \"\\n\",\n\n\t\"loggingEntry(error).loggingEntry.message\": (message, { red }) =>\n\t\tmapLines(message, x => `<e> ${red(x)}`),\n\t\"loggingEntry(warn).loggingEntry.message\": (message, { yellow }) =>\n\t\tmapLines(message, x => `<w> ${yellow(x)}`),\n\t\"loggingEntry(info).loggingEntry.message\": (message, { green }) =>\n\t\tmapLines(message, x => `<i> ${green(x)}`),\n\t\"loggingEntry(log).loggingEntry.message\": (message, { bold }) =>\n\t\tmapLines(message, x => `    ${bold(x)}`),\n\t\"loggingEntry(debug).loggingEntry.message\": message =>\n\t\tmapLines(message, x => `    ${x}`),\n\t\"loggingEntry(trace).loggingEntry.message\": message =>\n\t\tmapLines(message, x => `    ${x}`),\n\t\"loggingEntry(status).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `<s> ${magenta(x)}`),\n\t\"loggingEntry(profile).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `<p> ${magenta(x)}`),\n\t\"loggingEntry(profileEnd).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `</p> ${magenta(x)}`),\n\t\"loggingEntry(time).loggingEntry.message\": (message, { magenta }) =>\n\t\tmapLines(message, x => `<t> ${magenta(x)}`),\n\t\"loggingEntry(group).loggingEntry.message\": (message, { cyan }) =>\n\t\tmapLines(message, x => `<-> ${cyan(x)}`),\n\t\"loggingEntry(groupCollapsed).loggingEntry.message\": (message, { cyan }) =>\n\t\tmapLines(message, x => `<+> ${cyan(x)}`),\n\t\"loggingEntry(clear).loggingEntry\": () => \"    -------\",\n\t\"loggingEntry(groupCollapsed).loggingEntry.children\": () => \"\",\n\t\"loggingEntry.trace[]\": trace =>\n\t\ttrace ? mapLines(trace, x => `| ${x}`) : undefined,\n\n\t\"moduleTraceItem.originName\": originName => originName,\n\n\tloggingGroup: loggingGroup =>\n\t\tloggingGroup.entries.length === 0 ? \"\" : undefined,\n\t\"loggingGroup.debug\": (flag, { red }) => (flag ? red(\"DEBUG\") : undefined),\n\t\"loggingGroup.name\": (name, { bold }) => bold(`LOG from ${name}`),\n\t\"loggingGroup.separator!\": () => \"\\n\",\n\t\"loggingGroup.filteredEntries\": filteredEntries =>\n\t\tfilteredEntries > 0 ? `+ ${filteredEntries} hidden lines` : undefined,\n\n\t\"moduleTraceDependency.loc\": loc => loc\n};\n\n/** @type {Record<string, string | Function>} */\nconst ITEM_NAMES = {\n\t\"compilation.assets[]\": \"asset\",\n\t\"compilation.modules[]\": \"module\",\n\t\"compilation.chunks[]\": \"chunk\",\n\t\"compilation.entrypoints[]\": \"chunkGroup\",\n\t\"compilation.namedChunkGroups[]\": \"chunkGroup\",\n\t\"compilation.errors[]\": \"error\",\n\t\"compilation.warnings[]\": \"error\",\n\t\"compilation.logging[]\": \"loggingGroup\",\n\t\"compilation.children[]\": \"compilation\",\n\t\"asset.related[]\": \"asset\",\n\t\"asset.children[]\": \"asset\",\n\t\"asset.chunks[]\": \"assetChunk\",\n\t\"asset.auxiliaryChunks[]\": \"assetChunk\",\n\t\"asset.chunkNames[]\": \"assetChunkName\",\n\t\"asset.chunkIdHints[]\": \"assetChunkIdHint\",\n\t\"asset.auxiliaryChunkNames[]\": \"assetChunkName\",\n\t\"asset.auxiliaryChunkIdHints[]\": \"assetChunkIdHint\",\n\t\"chunkGroup.assets[]\": \"chunkGroupAsset\",\n\t\"chunkGroup.auxiliaryAssets[]\": \"chunkGroupAsset\",\n\t\"chunkGroupChild.assets[]\": \"chunkGroupAsset\",\n\t\"chunkGroupChild.auxiliaryAssets[]\": \"chunkGroupAsset\",\n\t\"chunkGroup.children[]\": \"chunkGroupChildGroup\",\n\t\"chunkGroupChildGroup.children[]\": \"chunkGroupChild\",\n\t\"module.modules[]\": \"module\",\n\t\"module.children[]\": \"module\",\n\t\"module.reasons[]\": \"moduleReason\",\n\t\"moduleReason.children[]\": \"moduleReason\",\n\t\"module.issuerPath[]\": \"moduleIssuer\",\n\t\"chunk.origins[]\": \"chunkOrigin\",\n\t\"chunk.modules[]\": \"module\",\n\t\"loggingGroup.entries[]\": logEntry =>\n\t\t`loggingEntry(${logEntry.type}).loggingEntry`,\n\t\"loggingEntry.children[]\": logEntry =>\n\t\t`loggingEntry(${logEntry.type}).loggingEntry`,\n\t\"error.moduleTrace[]\": \"moduleTraceItem\",\n\t\"moduleTraceItem.dependencies[]\": \"moduleTraceDependency\"\n};\n\nconst ERROR_PREFERRED_ORDER = [\n\t\"compilerPath\",\n\t\"chunkId\",\n\t\"chunkEntry\",\n\t\"chunkInitial\",\n\t\"file\",\n\t\"separator!\",\n\t\"moduleName\",\n\t\"loc\",\n\t\"separator!\",\n\t\"message\",\n\t\"separator!\",\n\t\"details\",\n\t\"separator!\",\n\t\"stack\",\n\t\"separator!\",\n\t\"missing\",\n\t\"separator!\",\n\t\"moduleTrace\"\n];\n\n/** @type {Record<string, string[]>} */\nconst PREFERRED_ORDERS = {\n\tcompilation: [\n\t\t\"name\",\n\t\t\"hash\",\n\t\t\"version\",\n\t\t\"time\",\n\t\t\"builtAt\",\n\t\t\"env\",\n\t\t\"publicPath\",\n\t\t\"assets\",\n\t\t\"filteredAssets\",\n\t\t\"entrypoints\",\n\t\t\"namedChunkGroups\",\n\t\t\"chunks\",\n\t\t\"modules\",\n\t\t\"filteredModules\",\n\t\t\"children\",\n\t\t\"logging\",\n\t\t\"warnings\",\n\t\t\"warningsInChildren!\",\n\t\t\"filteredWarningDetailsCount\",\n\t\t\"errors\",\n\t\t\"errorsInChildren!\",\n\t\t\"filteredErrorDetailsCount\",\n\t\t\"summary!\",\n\t\t\"needAdditionalPass\"\n\t],\n\tasset: [\n\t\t\"type\",\n\t\t\"name\",\n\t\t\"size\",\n\t\t\"chunks\",\n\t\t\"auxiliaryChunks\",\n\t\t\"emitted\",\n\t\t\"comparedForEmit\",\n\t\t\"cached\",\n\t\t\"info\",\n\t\t\"isOverSizeLimit\",\n\t\t\"chunkNames\",\n\t\t\"auxiliaryChunkNames\",\n\t\t\"chunkIdHints\",\n\t\t\"auxiliaryChunkIdHints\",\n\t\t\"related\",\n\t\t\"filteredRelated\",\n\t\t\"children\",\n\t\t\"filteredChildren\"\n\t],\n\t\"asset.info\": [\n\t\t\"immutable\",\n\t\t\"sourceFilename\",\n\t\t\"javascriptModule\",\n\t\t\"development\",\n\t\t\"hotModuleReplacement\"\n\t],\n\tchunkGroup: [\n\t\t\"kind!\",\n\t\t\"name\",\n\t\t\"isOverSizeLimit\",\n\t\t\"assetsSize\",\n\t\t\"auxiliaryAssetsSize\",\n\t\t\"is!\",\n\t\t\"assets\",\n\t\t\"filteredAssets\",\n\t\t\"auxiliaryAssets\",\n\t\t\"filteredAuxiliaryAssets\",\n\t\t\"separator!\",\n\t\t\"children\"\n\t],\n\tchunkGroupAsset: [\"name\", \"size\"],\n\tchunkGroupChildGroup: [\"type\", \"children\"],\n\tchunkGroupChild: [\"assets\", \"chunks\", \"name\"],\n\tmodule: [\n\t\t\"type\",\n\t\t\"name\",\n\t\t\"identifier\",\n\t\t\"id\",\n\t\t\"layer\",\n\t\t\"sizes\",\n\t\t\"chunks\",\n\t\t\"depth\",\n\t\t\"cacheable\",\n\t\t\"orphan\",\n\t\t\"runtime\",\n\t\t\"optional\",\n\t\t\"dependent\",\n\t\t\"built\",\n\t\t\"codeGenerated\",\n\t\t\"cached\",\n\t\t\"assets\",\n\t\t\"failed\",\n\t\t\"warnings\",\n\t\t\"errors\",\n\t\t\"children\",\n\t\t\"filteredChildren\",\n\t\t\"providedExports\",\n\t\t\"usedExports\",\n\t\t\"optimizationBailout\",\n\t\t\"reasons\",\n\t\t\"filteredReasons\",\n\t\t\"issuerPath\",\n\t\t\"profile\",\n\t\t\"modules\",\n\t\t\"filteredModules\"\n\t],\n\tmoduleReason: [\n\t\t\"active\",\n\t\t\"type\",\n\t\t\"userRequest\",\n\t\t\"moduleId\",\n\t\t\"module\",\n\t\t\"resolvedModule\",\n\t\t\"loc\",\n\t\t\"explanation\",\n\t\t\"children\",\n\t\t\"filteredChildren\"\n\t],\n\t\"module.profile\": [\n\t\t\"total\",\n\t\t\"separator!\",\n\t\t\"resolving\",\n\t\t\"restoring\",\n\t\t\"integration\",\n\t\t\"building\",\n\t\t\"storing\",\n\t\t\"additionalResolving\",\n\t\t\"additionalIntegration\"\n\t],\n\tchunk: [\n\t\t\"id\",\n\t\t\"runtime\",\n\t\t\"files\",\n\t\t\"names\",\n\t\t\"idHints\",\n\t\t\"sizes\",\n\t\t\"parents\",\n\t\t\"siblings\",\n\t\t\"children\",\n\t\t\"childrenByOrder\",\n\t\t\"entry\",\n\t\t\"initial\",\n\t\t\"rendered\",\n\t\t\"recorded\",\n\t\t\"reason\",\n\t\t\"separator!\",\n\t\t\"origins\",\n\t\t\"separator!\",\n\t\t\"modules\",\n\t\t\"separator!\",\n\t\t\"filteredModules\"\n\t],\n\tchunkOrigin: [\"request\", \"moduleId\", \"moduleName\", \"loc\"],\n\terror: ERROR_PREFERRED_ORDER,\n\twarning: ERROR_PREFERRED_ORDER,\n\t\"chunk.childrenByOrder[]\": [\"type\", \"children\"],\n\tloggingGroup: [\n\t\t\"debug\",\n\t\t\"name\",\n\t\t\"separator!\",\n\t\t\"entries\",\n\t\t\"separator!\",\n\t\t\"filteredEntries\"\n\t],\n\tloggingEntry: [\"message\", \"trace\", \"children\"]\n};\n\nconst itemsJoinOneLine = items => items.filter(Boolean).join(\" \");\nconst itemsJoinOneLineBrackets = items =>\n\titems.length > 0 ? `(${items.filter(Boolean).join(\" \")})` : undefined;\nconst itemsJoinMoreSpacing = items => items.filter(Boolean).join(\"\\n\\n\");\nconst itemsJoinComma = items => items.filter(Boolean).join(\", \");\nconst itemsJoinCommaBrackets = items =>\n\titems.length > 0 ? `(${items.filter(Boolean).join(\", \")})` : undefined;\nconst itemsJoinCommaBracketsWithName = name => items =>\n\titems.length > 0\n\t\t? `(${name}: ${items.filter(Boolean).join(\", \")})`\n\t\t: undefined;\n\n/** @type {Record<string, (items: string[]) => string>} */\nconst SIMPLE_ITEMS_JOINER = {\n\t\"chunk.parents\": itemsJoinOneLine,\n\t\"chunk.siblings\": itemsJoinOneLine,\n\t\"chunk.children\": itemsJoinOneLine,\n\t\"chunk.names\": itemsJoinCommaBrackets,\n\t\"chunk.idHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n\t\"chunk.runtime\": itemsJoinCommaBracketsWithName(\"runtime\"),\n\t\"chunk.files\": itemsJoinComma,\n\t\"chunk.childrenByOrder\": itemsJoinOneLine,\n\t\"chunk.childrenByOrder[].children\": itemsJoinOneLine,\n\t\"chunkGroup.assets\": itemsJoinOneLine,\n\t\"chunkGroup.auxiliaryAssets\": itemsJoinOneLineBrackets,\n\t\"chunkGroupChildGroup.children\": itemsJoinComma,\n\t\"chunkGroupChild.assets\": itemsJoinOneLine,\n\t\"chunkGroupChild.auxiliaryAssets\": itemsJoinOneLineBrackets,\n\t\"asset.chunks\": itemsJoinComma,\n\t\"asset.auxiliaryChunks\": itemsJoinCommaBrackets,\n\t\"asset.chunkNames\": itemsJoinCommaBracketsWithName(\"name\"),\n\t\"asset.auxiliaryChunkNames\": itemsJoinCommaBracketsWithName(\"auxiliary name\"),\n\t\"asset.chunkIdHints\": itemsJoinCommaBracketsWithName(\"id hint\"),\n\t\"asset.auxiliaryChunkIdHints\":\n\t\titemsJoinCommaBracketsWithName(\"auxiliary id hint\"),\n\t\"module.chunks\": itemsJoinOneLine,\n\t\"module.issuerPath\": items =>\n\t\titems\n\t\t\t.filter(Boolean)\n\t\t\t.map(item => `${item} ->`)\n\t\t\t.join(\" \"),\n\t\"compilation.errors\": itemsJoinMoreSpacing,\n\t\"compilation.warnings\": itemsJoinMoreSpacing,\n\t\"compilation.logging\": itemsJoinMoreSpacing,\n\t\"compilation.children\": items => indent(itemsJoinMoreSpacing(items), \"  \"),\n\t\"moduleTraceItem.dependencies\": itemsJoinOneLine,\n\t\"loggingEntry.children\": items =>\n\t\tindent(items.filter(Boolean).join(\"\\n\"), \"  \", false)\n};\n\nconst joinOneLine = items =>\n\titems\n\t\t.map(item => item.content)\n\t\t.filter(Boolean)\n\t\t.join(\" \");\n\nconst joinInBrackets = items => {\n\tconst res = [];\n\tlet mode = 0;\n\tfor (const item of items) {\n\t\tif (item.element === \"separator!\") {\n\t\t\tswitch (mode) {\n\t\t\t\tcase 0:\n\t\t\t\tcase 1:\n\t\t\t\t\tmode += 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tres.push(\")\");\n\t\t\t\t\tmode = 3;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!item.content) continue;\n\t\tswitch (mode) {\n\t\t\tcase 0:\n\t\t\t\tmode = 1;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tres.push(\" \");\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tres.push(\"(\");\n\t\t\t\tmode = 4;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tres.push(\" (\");\n\t\t\t\tmode = 4;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tres.push(\", \");\n\t\t\t\tbreak;\n\t\t}\n\t\tres.push(item.content);\n\t}\n\tif (mode === 4) res.push(\")\");\n\treturn res.join(\"\");\n};\n\nconst indent = (str, prefix, noPrefixInFirstLine) => {\n\tconst rem = str.replace(/\\n([^\\n])/g, \"\\n\" + prefix + \"$1\");\n\tif (noPrefixInFirstLine) return rem;\n\tconst ind = str[0] === \"\\n\" ? \"\" : prefix;\n\treturn ind + rem;\n};\n\nconst joinExplicitNewLine = (items, indenter) => {\n\tlet firstInLine = true;\n\tlet first = true;\n\treturn items\n\t\t.map(item => {\n\t\t\tif (!item || !item.content) return;\n\t\t\tlet content = indent(item.content, first ? \"\" : indenter, !firstInLine);\n\t\t\tif (firstInLine) {\n\t\t\t\tcontent = content.replace(/^\\n+/, \"\");\n\t\t\t}\n\t\t\tif (!content) return;\n\t\t\tfirst = false;\n\t\t\tconst noJoiner = firstInLine || content.startsWith(\"\\n\");\n\t\t\tfirstInLine = content.endsWith(\"\\n\");\n\t\t\treturn noJoiner ? content : \" \" + content;\n\t\t})\n\t\t.filter(Boolean)\n\t\t.join(\"\")\n\t\t.trim();\n};\n\nconst joinError =\n\terror =>\n\t(items, { red, yellow }) =>\n\t\t`${error ? red(\"ERROR\") : yellow(\"WARNING\")} in ${joinExplicitNewLine(\n\t\t\titems,\n\t\t\t\"\"\n\t\t)}`;\n\n/** @type {Record<string, (items: ({ element: string, content: string })[], context: StatsPrinterContext) => string>} */\nconst SIMPLE_ELEMENT_JOINERS = {\n\tcompilation: items => {\n\t\tconst result = [];\n\t\tlet lastNeedMore = false;\n\t\tfor (const item of items) {\n\t\t\tif (!item.content) continue;\n\t\t\tconst needMoreSpace =\n\t\t\t\titem.element === \"warnings\" ||\n\t\t\t\titem.element === \"filteredWarningDetailsCount\" ||\n\t\t\t\titem.element === \"errors\" ||\n\t\t\t\titem.element === \"filteredErrorDetailsCount\" ||\n\t\t\t\titem.element === \"logging\";\n\t\t\tif (result.length !== 0) {\n\t\t\t\tresult.push(needMoreSpace || lastNeedMore ? \"\\n\\n\" : \"\\n\");\n\t\t\t}\n\t\t\tresult.push(item.content);\n\t\t\tlastNeedMore = needMoreSpace;\n\t\t}\n\t\tif (lastNeedMore) result.push(\"\\n\");\n\t\treturn result.join(\"\");\n\t},\n\tasset: items =>\n\t\tjoinExplicitNewLine(\n\t\t\titems.map(item => {\n\t\t\t\tif (\n\t\t\t\t\t(item.element === \"related\" || item.element === \"children\") &&\n\t\t\t\t\titem.content\n\t\t\t\t) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tcontent: `\\n${item.content}\\n`\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t\t\"  \"\n\t\t),\n\t\"asset.info\": joinOneLine,\n\tmodule: (items, { module }) => {\n\t\tlet hasName = false;\n\t\treturn joinExplicitNewLine(\n\t\t\titems.map(item => {\n\t\t\t\tswitch (item.element) {\n\t\t\t\t\tcase \"id\":\n\t\t\t\t\t\tif (module.id === module.name) {\n\t\t\t\t\t\t\tif (hasName) return false;\n\t\t\t\t\t\t\tif (item.content) hasName = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"name\":\n\t\t\t\t\t\tif (hasName) return false;\n\t\t\t\t\t\tif (item.content) hasName = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"providedExports\":\n\t\t\t\t\tcase \"usedExports\":\n\t\t\t\t\tcase \"optimizationBailout\":\n\t\t\t\t\tcase \"reasons\":\n\t\t\t\t\tcase \"issuerPath\":\n\t\t\t\t\tcase \"profile\":\n\t\t\t\t\tcase \"children\":\n\t\t\t\t\tcase \"modules\":\n\t\t\t\t\t\tif (item.content) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\tcontent: `\\n${item.content}\\n`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t\t\"  \"\n\t\t);\n\t},\n\tchunk: items => {\n\t\tlet hasEntry = false;\n\t\treturn (\n\t\t\t\"chunk \" +\n\t\t\tjoinExplicitNewLine(\n\t\t\t\titems.filter(item => {\n\t\t\t\t\tswitch (item.element) {\n\t\t\t\t\t\tcase \"entry\":\n\t\t\t\t\t\t\tif (item.content) hasEntry = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"initial\":\n\t\t\t\t\t\t\tif (hasEntry) return false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}),\n\t\t\t\t\"  \"\n\t\t\t)\n\t\t);\n\t},\n\t\"chunk.childrenByOrder[]\": items => `(${joinOneLine(items)})`,\n\tchunkGroup: items => joinExplicitNewLine(items, \"  \"),\n\tchunkGroupAsset: joinOneLine,\n\tchunkGroupChildGroup: joinOneLine,\n\tchunkGroupChild: joinOneLine,\n\t// moduleReason: (items, { moduleReason }) => {\n\t// \tlet hasName = false;\n\t// \treturn joinOneLine(\n\t// \t\titems.filter(item => {\n\t// \t\t\tswitch (item.element) {\n\t// \t\t\t\tcase \"moduleId\":\n\t// \t\t\t\t\tif (moduleReason.moduleId === moduleReason.module && item.content)\n\t// \t\t\t\t\t\thasName = true;\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\tcase \"module\":\n\t// \t\t\t\t\tif (hasName) return false;\n\t// \t\t\t\t\tbreak;\n\t// \t\t\t\tcase \"resolvedModule\":\n\t// \t\t\t\t\treturn (\n\t// \t\t\t\t\t\tmoduleReason.module !== moduleReason.resolvedModule &&\n\t// \t\t\t\t\t\titem.content\n\t// \t\t\t\t\t);\n\t// \t\t\t}\n\t// \t\t\treturn true;\n\t// \t\t})\n\t// \t);\n\t// },\n\tmoduleReason: (items, { moduleReason }) => {\n\t\tlet hasName = false;\n\t\treturn joinExplicitNewLine(\n\t\t\titems.map(item => {\n\t\t\t\tswitch (item.element) {\n\t\t\t\t\tcase \"moduleId\":\n\t\t\t\t\t\tif (moduleReason.moduleId === moduleReason.module && item.content)\n\t\t\t\t\t\t\thasName = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"module\":\n\t\t\t\t\t\tif (hasName) return false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"resolvedModule\":\n\t\t\t\t\t\tif (moduleReason.module === moduleReason.resolvedModule)\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"children\":\n\t\t\t\t\t\tif (item.content) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t...item,\n\t\t\t\t\t\t\t\tcontent: `\\n${item.content}\\n`\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn item;\n\t\t\t}),\n\t\t\t\"  \"\n\t\t);\n\t},\n\t\"module.profile\": joinInBrackets,\n\tmoduleIssuer: joinOneLine,\n\tchunkOrigin: items => \"> \" + joinOneLine(items),\n\t\"errors[].error\": joinError(true),\n\t\"warnings[].error\": joinError(false),\n\tloggingGroup: items => joinExplicitNewLine(items, \"\").trimRight(),\n\tmoduleTraceItem: items => \" @ \" + joinOneLine(items),\n\tmoduleTraceDependency: joinOneLine\n};\n\nconst AVAILABLE_COLORS = {\n\tbold: \"\\u001b[1m\",\n\tyellow: \"\\u001b[1m\\u001b[33m\",\n\tred: \"\\u001b[1m\\u001b[31m\",\n\tgreen: \"\\u001b[1m\\u001b[32m\",\n\tcyan: \"\\u001b[1m\\u001b[36m\",\n\tmagenta: \"\\u001b[1m\\u001b[35m\"\n};\n\nconst AVAILABLE_FORMATS = {\n\tformatChunkId: (id, { yellow }, direction) => {\n\t\tswitch (direction) {\n\t\t\tcase \"parent\":\n\t\t\t\treturn `<{${yellow(id)}}>`;\n\t\t\tcase \"sibling\":\n\t\t\t\treturn `={${yellow(id)}}=`;\n\t\t\tcase \"child\":\n\t\t\t\treturn `>{${yellow(id)}}<`;\n\t\t\tdefault:\n\t\t\t\treturn `{${yellow(id)}}`;\n\t\t}\n\t},\n\tformatModuleId: id => `[${id}]`,\n\tformatFilename: (filename, { green, yellow }, oversize) =>\n\t\t(oversize ? yellow : green)(filename),\n\tformatFlag: flag => `[${flag}]`,\n\tformatLayer: layer => `(in ${layer})`,\n\tformatSize: require(\"../SizeFormatHelpers\").formatSize,\n\tformatDateTime: (dateTime, { bold }) => {\n\t\tconst d = new Date(dateTime);\n\t\tconst x = twoDigit;\n\t\tconst date = `${d.getFullYear()}-${x(d.getMonth() + 1)}-${x(d.getDate())}`;\n\t\tconst time = `${x(d.getHours())}:${x(d.getMinutes())}:${x(d.getSeconds())}`;\n\t\treturn `${date} ${bold(time)}`;\n\t},\n\tformatTime: (\n\t\ttime,\n\t\t{ timeReference, bold, green, yellow, red },\n\t\tboldQuantity\n\t) => {\n\t\tconst unit = \" ms\";\n\t\tif (timeReference && time !== timeReference) {\n\t\t\tconst times = [\n\t\t\t\ttimeReference / 2,\n\t\t\t\ttimeReference / 4,\n\t\t\t\ttimeReference / 8,\n\t\t\t\ttimeReference / 16\n\t\t\t];\n\t\t\tif (time < times[3]) return `${time}${unit}`;\n\t\t\telse if (time < times[2]) return bold(`${time}${unit}`);\n\t\t\telse if (time < times[1]) return green(`${time}${unit}`);\n\t\t\telse if (time < times[0]) return yellow(`${time}${unit}`);\n\t\t\telse return red(`${time}${unit}`);\n\t\t} else {\n\t\t\treturn `${boldQuantity ? bold(time) : time}${unit}`;\n\t\t}\n\t},\n\tformatError: (message, { green, yellow, red }) => {\n\t\tif (message.includes(\"\\u001b[\")) return message;\n\t\tconst highlights = [\n\t\t\t{ regExp: /(Did you mean .+)/g, format: green },\n\t\t\t{\n\t\t\t\tregExp: /(Set 'mode' option to 'development' or 'production')/g,\n\t\t\t\tformat: green\n\t\t\t},\n\t\t\t{ regExp: /(\\(module has no exports\\))/g, format: red },\n\t\t\t{ regExp: /\\(possible exports: (.+)\\)/g, format: green },\n\t\t\t{ regExp: /(?:^|\\n)(.* doesn't exist)/g, format: red },\n\t\t\t{ regExp: /('\\w+' option has not been set)/g, format: red },\n\t\t\t{\n\t\t\t\tregExp: /(Emitted value instead of an instance of Error)/g,\n\t\t\t\tformat: yellow\n\t\t\t},\n\t\t\t{ regExp: /(Used? .+ instead)/gi, format: yellow },\n\t\t\t{ regExp: /\\b(deprecated|must|required)\\b/g, format: yellow },\n\t\t\t{\n\t\t\t\tregExp: /\\b(BREAKING CHANGE)\\b/gi,\n\t\t\t\tformat: red\n\t\t\t},\n\t\t\t{\n\t\t\t\tregExp:\n\t\t\t\t\t/\\b(error|failed|unexpected|invalid|not found|not supported|not available|not possible|not implemented|doesn't support|conflict|conflicting|not existing|duplicate)\\b/gi,\n\t\t\t\tformat: red\n\t\t\t}\n\t\t];\n\t\tfor (const { regExp, format } of highlights) {\n\t\t\tmessage = message.replace(regExp, (match, content) => {\n\t\t\t\treturn match.replace(content, format(content));\n\t\t\t});\n\t\t}\n\t\treturn message;\n\t}\n};\n\nconst RESULT_MODIFIER = {\n\t\"module.modules\": result => {\n\t\treturn indent(result, \"| \");\n\t}\n};\n\nconst createOrder = (array, preferredOrder) => {\n\tconst originalArray = array.slice();\n\tconst set = new Set(array);\n\tconst usedSet = new Set();\n\tarray.length = 0;\n\tfor (const element of preferredOrder) {\n\t\tif (element.endsWith(\"!\") || set.has(element)) {\n\t\t\tarray.push(element);\n\t\t\tusedSet.add(element);\n\t\t}\n\t}\n\tfor (const element of originalArray) {\n\t\tif (!usedSet.has(element)) {\n\t\t\tarray.push(element);\n\t\t}\n\t}\n\treturn array;\n};\n\nclass DefaultStatsPrinterPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"DefaultStatsPrinterPlugin\", compilation => {\n\t\t\tcompilation.hooks.statsPrinter.tap(\n\t\t\t\t\"DefaultStatsPrinterPlugin\",\n\t\t\t\t(stats, options, context) => {\n\t\t\t\t\t// Put colors into context\n\t\t\t\t\tstats.hooks.print\n\t\t\t\t\t\t.for(\"compilation\")\n\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", (compilation, context) => {\n\t\t\t\t\t\t\tfor (const color of Object.keys(AVAILABLE_COLORS)) {\n\t\t\t\t\t\t\t\tlet start;\n\t\t\t\t\t\t\t\tif (options.colors) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\ttypeof options.colors === \"object\" &&\n\t\t\t\t\t\t\t\t\t\ttypeof options.colors[color] === \"string\"\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\t\tstart = options.colors[color];\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tstart = AVAILABLE_COLORS[color];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (start) {\n\t\t\t\t\t\t\t\t\tcontext[color] = str =>\n\t\t\t\t\t\t\t\t\t\t`${start}${\n\t\t\t\t\t\t\t\t\t\t\ttypeof str === \"string\"\n\t\t\t\t\t\t\t\t\t\t\t\t? str.replace(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/((\\u001b\\[39m|\\u001b\\[22m|\\u001b\\[0m)+)/g,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`$1${start}`\n\t\t\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t\t\t: str\n\t\t\t\t\t\t\t\t\t\t}\\u001b[39m\\u001b[22m`;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcontext[color] = str => str;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const format of Object.keys(AVAILABLE_FORMATS)) {\n\t\t\t\t\t\t\t\tcontext[format] = (content, ...args) =>\n\t\t\t\t\t\t\t\t\tAVAILABLE_FORMATS[format](content, context, ...args);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontext.timeReference = compilation.time;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tfor (const key of Object.keys(SIMPLE_PRINTERS)) {\n\t\t\t\t\t\tstats.hooks.print\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", (obj, ctx) =>\n\t\t\t\t\t\t\t\tSIMPLE_PRINTERS[key](obj, ctx, stats)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(PREFERRED_ORDERS)) {\n\t\t\t\t\t\tconst preferredOrder = PREFERRED_ORDERS[key];\n\t\t\t\t\t\tstats.hooks.sortElements\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", (elements, context) => {\n\t\t\t\t\t\t\t\tcreateOrder(elements, preferredOrder);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(ITEM_NAMES)) {\n\t\t\t\t\t\tconst itemName = ITEM_NAMES[key];\n\t\t\t\t\t\tstats.hooks.getItemName\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"DefaultStatsPrinterPlugin\",\n\t\t\t\t\t\t\t\ttypeof itemName === \"string\" ? () => itemName : itemName\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(SIMPLE_ITEMS_JOINER)) {\n\t\t\t\t\t\tconst joiner = SIMPLE_ITEMS_JOINER[key];\n\t\t\t\t\t\tstats.hooks.printItems\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", joiner);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(SIMPLE_ELEMENT_JOINERS)) {\n\t\t\t\t\t\tconst joiner = SIMPLE_ELEMENT_JOINERS[key];\n\t\t\t\t\t\tstats.hooks.printElements\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", joiner);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const key of Object.keys(RESULT_MODIFIER)) {\n\t\t\t\t\t\tconst modifier = RESULT_MODIFIER[key];\n\t\t\t\t\t\tstats.hooks.result\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\"DefaultStatsPrinterPlugin\", modifier);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\nmodule.exports = DefaultStatsPrinterPlugin;\n"]},"metadata":{},"sourceType":"script"}